<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Aspose.Cells.GridWeb</name>
  </assembly>
  <members>
    <member name="T:Aspose.Cells.GridWeb.BindColumn">
      <summary>
            BindColumn.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.BindColumn.#ctor">
      <summary>
            Defalut constructor.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.BindColumn.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Internal used only.
            </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.DataField">
      <summary>
            Gets or sets the data field name string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.Width">
      <summary>
            Gets of sets the width of the column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.Style">
      <summary>
            Gets or sets the style of the column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.AlternativeStyle">
      <summary>
            Gets or sets the alternative style of the column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.UseAlternativeStyle">
      <summary>
            Gets or sets whether to use the alternative style for the column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.ColumnHeaderStyle">
      <summary>
            Gets or sets the style of the column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.NumberType">
      <summary>
            Gets or sets the number type of the column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.CustomFormat">
      <summary>
            The custom format string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.Validation">
      <summary>
            Gets or sets the validation object of the column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.Caption">
      <summary>
            The caption of the column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.IsReadOnly">
      <summary>
            Indicates whether the column is readonly.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.EnableSort">
      <summary>
            Indicates whether the user can click the column header to sort by this field.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.IsAutoCreated">
      <summary>
            Indicates whether the column is created automatically. If true, the column will be deleted when user change the datasource in the design time.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.Name">
      <summary>
            Design time used only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.CommandName">
      <summary>
            The command name of the column. A CellCommand Hyperlink will be created in the bound cell if the CommandName property is set.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.CommandText">
      <summary>
            The displaying command text of the column. If set to null, the cell will use the field value as the command text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumn.ImageUrl">
      <summary>
            The image url of the command hyperlink.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.BindColumnCollection">
      <summary>
            BindColumnCollection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.BindColumnCollection.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies to an array.
            </summary>
      <param name="array">
      </param>
      <param name="index">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.BindColumnCollection.GetEnumerator">
      <summary>
            Gets a enumerator.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.BindColumnCollection.RemoveAt(System.Int32)">
      <summary>
            Removes at the specified index.
            </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.BindColumnCollection.Insert(System.Int32,System.Object)">
      <summary>
            Inserts an bind column object.
            </summary>
      <param name="index">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.BindColumnCollection.Remove(System.Object)">
      <summary>
            Remove an bind column object.
            </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.BindColumnCollection.Contains(System.Object)">
      <summary>
            Indicates whether the bind column is in the collection.
            </summary>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.BindColumnCollection.Clear">
      <summary>
            Clears the colleciton.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.BindColumnCollection.IndexOf(System.Object)">
      <summary>
            Gets the index of the specified bind column object.
            </summary>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.BindColumnCollection.Add(System.Object)">
      <summary>
            Adds the specified bind column object to the collection.
            </summary>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumnCollection.Item(System.Object)">
      <summary>
            Gets the bind column by an integer index or a data field name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumnCollection.IsSynchronized">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumnCollection.Count">
      <summary>
            Gets the count of the collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumnCollection.SyncRoot">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumnCollection.IsReadOnly">
      <summary>
            Alway true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.BindColumnCollection.IsFixedSize">
      <summary>
            Always true.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.SetBorderPosition">
      <summary>
            Represents the border position to be set of a cells range.
            </summary>
      <example>
        <code>
            [C#]
            	GridWeb1.WebWorksheets[0].Cells.SetBorders(0, 0, 5, 8, SetBorderPosition.Outline, borderStyle1);
            
            [VB]
            	GridWeb1.WebWorksheets(0).Cells.SetBorders(0, 0, 5, 8, SetBorderPosition.Outline, borderStyle1)
            </code>
      </example>
    </member>
    <member name="F:Aspose.Cells.GridWeb.SetBorderPosition.Top">
      <summary>
            Top border
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.SetBorderPosition.Bottom">
      <summary>
            Bottom border
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.SetBorderPosition.Left">
      <summary>
            Left border
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.SetBorderPosition.Right">
      <summary>
            Right border
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.SetBorderPosition.Outline">
      <summary>
            Outline borders
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.SetBorderPosition.Cross">
      <summary>
            Cross borders
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.SetBorderPosition.None">
      <summary>
            No borders
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.WebBorderStyle">
      <summary>
            Encapsulates the style of web table or cell border.
            </summary>
      <remarks>
            Please refer to .NET SDK document for further information about System.Web.UI.WebControls namespace.
            </remarks>
      <example>
        <code>
            [C#]
            	WebCell cell1 = GridWeb1.WebWorksheets[0].Cells["A1"];
            	cell1.Style.LeftBorderStyle.BorderColor = System.Drawing.Color.Red;
            	cell1.Style.LeftBorderStyle.BorderStyle = System.Web.UI.WebControls.BorderStyle.Solid;
            	cell1.Style.LeftBorderStyle.BorderWidth = new System.Web.UI.WebControls.Unit(16, System.Web.UI.WebControls.UnitType.Point);
            
            [Visual Basic]
            	Dim cell1 As WebCell =  GridWeb1.WebWorksheets(0).Cells("A1") 
            	cell1.Style.LeftBorderStyle.BorderColor = System.Drawing.Color.Red
            	cell1.Style.LeftBorderStyle.BorderStyle = System.Web.UI.WebControls.BorderStyle.Solid
            	cell1.Style.LeftBorderStyle.BorderWidth = New System.Web.UI.WebControls.Unit(16, System.Web.UI.WebControls.UnitType.Point)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.WebBorderStyle.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.WebBorderStyle.CopyFrom(Aspose.Cells.GridWeb.WebBorderStyle)">
      <summary>
            Copies from another style object.
            </summary>
      <param name="style">The style object to be copied.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.WebBorderStyle.GetHashCode">
      <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
      <returns>A hash code for the current Style.</returns>
    </member>
    <member name="P:Aspose.Cells.GridWeb.WebBorderStyle.BorderStyle">
      <summary>
            Gets or sets the style of the border.
            Please refer to .NET SDK document about System.Web.UI.WebControls.BorderStyle enum.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.WebBorderStyle.BorderColor">
      <summary>
            Gets or sets the color of the border.
            Please refer to System.Drawing.Color struct.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.WebBorderStyle.BorderWidth">
      <summary>
            Gets or sets the width of the border.
            Please refer to System.Web.UI.WebControls.Unit struct.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.CellEventArgs">
      <summary>
            Provides data for cell events.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CellEventArgs.Cell">
      <summary>
            The cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CellEventArgs.Argument">
      <summary>
            The argument of the event.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.CustomCommandButtonType">
      <summary>
            Represents the type of a custom command.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.CustomCommandButtonType.CommandButton">
      <summary>
            The custom command will be rendered as a command button in the command bar.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.CustomCommandButtonType.ContextMenuItem">
      <summary>
            The custom command will be rendered as a context menu item.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.CustomCommandButton">
      <summary>
            Represents a custom command button in the tab bar of the GridWeb control.
            </summary>
      <example>
        <code>
            [C#]
            CustomCommandButton button = new CustomCommandButton();
            button.Command = "MyCommand";
            button.ImageUrl = "images/button1.gif";
            GridWeb1.CustomCommandButtons.Add(button);
            [VB]
            Dim button As CustomCommandButton =  New CustomCommandButton() 
            button.Command = "MyCommand"
            button.ImageUrl = "images/button1.gif"
            GridWeb1.CustomCommandButtons.Add(button)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.CustomCommandButton.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.CustomCommandButton.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Internal used only.
            </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.CustomCommandButton.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Internal used only.
            </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CustomCommandButton.CommandType">
      <summary>
            Gets or sets the rendering type of the command.
            The type can be command button or context menu item.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CustomCommandButton.Command">
      <summary>
            Gets or sets the command name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CustomCommandButton.Text">
      <summary>
            Gets or sets the alternative text of the command button.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CustomCommandButton.ImageUrl">
      <summary>
            Gets or sets the command button's image url. If sets to null or empty string, the button will only display it's text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CustomCommandButton.ToolTip">
      <summary>
            Gets or sets the tooltip of the command button.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CustomCommandButton.ClientClickEvent">
      <summary>
            Gets or sets the click event handler at client side.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CustomCommandButton.Width">
      <summary>
            Width of the button.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CustomCommandButton.DiscardInput">
      <summary>
            Indicates whether to discard user input at client browser when user click this button. Could be used as an "undo" action.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.CustomCommandButtonCollection">
      <summary>
            Represents the collection of CustomCommandButton.
            </summary>
      <example>
        <code>
            [C#]
            CustomCommandButton button = new CustomCommandButton();
            button.Command = "MyCommand";
            button.ImageUrl = "images/button1.gif";
            GridWeb1.CustomCommandButtons.Add(button);
            [VB]
            Dim button As CustomCommandButton =  New CustomCommandButton() 
            button.Command = "MyCommand"
            button.ImageUrl = "images/button1.gif"
            GridWeb1.CustomCommandButtons.Add(button)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.CustomCommandButtonCollection.RemoveAt(System.Int32)">
      <summary>
            Removes at the index.
            </summary>
      <param name="index">Index.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.CustomCommandButtonCollection.Insert(System.Int32,System.Object)">
      <summary>
            Inserts a button at the index.
            </summary>
      <param name="index">Index.</param>
      <param name="value">The CustomCommandButton object.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.CustomCommandButtonCollection.Remove(System.Object)">
      <summary>
            Removes the custom command button object.
            </summary>
      <param name="value">The custom command button object.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.CustomCommandButtonCollection.Contains(System.Object)">
      <summary>
            Indicates whether the custom command button object is in the collection.
            </summary>
      <param name="value">Indicates whether the custom command button object is in the collection.</param>
      <returns>True of false.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.CustomCommandButtonCollection.Clear">
      <summary>
            Clears the collection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.CustomCommandButtonCollection.IndexOf(System.Object)">
      <summary>
            Gets the index of the button.
            </summary>
      <param name="value">The button object.</param>
      <returns>The index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.CustomCommandButtonCollection.Add(System.Object)">
      <summary>
            Add a custom command button object to the collection.
            </summary>
      <param name="value">The custom command button object.</param>
      <returns>The index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.CustomCommandButtonCollection.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the collection to an array.
            </summary>
      <param name="array">The array.</param>
      <param name="index">The start index of the array.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.CustomCommandButtonCollection.GetEnumerator">
      <summary>
            Gets a IEnumerator object of the collection.
            </summary>
      <returns>The IEnumerator object.</returns>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CustomCommandButtonCollection.Item(System.Int32)">
      <summary>
            Gets a custom command button object at the index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CustomCommandButtonCollection.IsReadOnly">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CustomCommandButtonCollection.IsFixedSize">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CustomCommandButtonCollection.IsSynchronized">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CustomCommandButtonCollection.Count">
      <summary>
            Gets the count of the collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.CustomCommandButtonCollection.SyncRoot">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.CellAttachObject">
      <summary>
            Represents an cell's attachment object like Comment, Hyperlink, etc.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.CellAttachObject.Cell">
      <summary>
            Gets the relative cell of the object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.NumberType">
      <summary>
            Represents the number or datetime format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.General">
      <summary>
            General
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Decimal1">
      <summary>
            Decimal 0
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Decimal2">
      <summary>
            Decimal 0.00
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Decimal3">
      <summary>
            Decimal #,##0
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Decimal4">
      <summary>
            Decimal #,##0.00
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Currency1">
      <summary>
            Currency $#,##0;$-#,##0
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Currency2">
      <summary>
            Currency $#,##0;[Red]$-#,##0
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Currency3">
      <summary>
            Currency $#,##0.00;$-#,##0.00
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Currency4">
      <summary>
            Currency $#,##0.00;[Red]$-#,##0.00
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Percentage1">
      <summary>
            Percentage 0% 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Percentage2">
      <summary>
            Percentage 0.00%
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Scientific1">
      <summary>
            Scientific 0.00E+00 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Fraction1">
      <summary>
            Fraction # ?/?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Fraction2">
      <summary>
            Fraction # ??/??
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Date1">
      <summary>
            Date m/d/yy 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Date2">
      <summary>
             Date d-mmm-yy 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Date3">
      <summary>
            Date d-mmm 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Date4">
      <summary>
            Date mmm-yy 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Time1">
      <summary>
            Time h:mm AM/PM 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Time2">
      <summary>
            Time h:mm:ss AM/PM 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Time3">
      <summary>
            Time h:mm 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Time4">
      <summary>
            Time h:mm:ss 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Time5">
      <summary>
            Time m/d/yy h:mm 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Currency5">
      <summary>
            Currency #,##0;-#,##0 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Currency6">
      <summary>
            Currency #,##0;[Red]-#,##0 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Currency7">
      <summary>
            Currency #,##0.00;-#,##0.00 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Currency8">
      <summary>
            Currency #,##0.00;[Red]-#,##0.00 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Accounting1">
      <summary>
            Accounting _ * #,##0_ ;_ * -#,##0_ ;_ * "-"_ ;_ @_ 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Accounting2">
      <summary>
            Accounting _ $* #,##0_ ;_ $* -#,##0_ ;_ $* "-"_ ;_ @_ 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Accounting3">
      <summary>
            Accounting _ * #,##0.00_ ;_ * -#,##0.00_ ;_ * "-"??_ ;_ @_ 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Accounting4">
      <summary>
            Accounting _ $* #,##0.00_ ;_ $* -#,##0.00_ ;_ $* "-"??_ ;_ @_ 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Time6">
      <summary>
            Time mm:ss 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Time7">
      <summary>
            Time [h]:mm:ss 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Time8">
      <summary>
            Time mm:ss.0 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Scientific2">
      <summary>
            Scientific ##0.0E+00 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Text">
      <summary>
            Text @ 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Currency9">
      <summary>
            Currency $#,##0;($#,##0)
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Currency10">
      <summary>
            Currency $#,##0;[Red]($#,##0)
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Currency11">
      <summary>
            Currency $#,##0.00;($#,##0.00)
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.Currency12">
      <summary>
            Currency $#,##0.00;[Red]($#,##0.00)
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternDate1">
      <summary>
            Date YYYY年M月
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternDate2">
      <summary>
            Date M月D日
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternDate3">
      <summary>
            Date M月D日
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternDate4">
      <summary>
            Date M/D/YY
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternDate5">
      <summary>
            Date YYYY年M月D日
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternDate6">
      <summary>
            Date YYYY年M月
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternDate7">
      <summary>
            Date YYYY年M月
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternDate8">
      <summary>
            Date M月D日
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternDate9">
      <summary>
            Date YYYY年M月
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternDate10">
      <summary>
            Date M月D日
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternDate11">
      <summary>
            Date M月D日
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternDate12">
      <summary>
            Date YYYY年M月
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternDate13">
      <summary>
            Date M月D日
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternTime1">
      <summary>
            Time h时mm分
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternTime2">
      <summary>
            Time h时mm分ss秒
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternTime3">
      <summary>
            Time tth时mm分
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternTime4">
      <summary>
            Time tth时mm分ss秒
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternTime5">
      <summary>
            Time tth时mm分
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.NumberType.EasternTime6">
      <summary>
            Time tth时mm分ss秒
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.WebComment">
      <summary>
            Encapsulates the object that represents a cell comment.
            </summary>
            /// <example><code>
            [C#]
            //Add comment to cell A1
            WebCell cell = GridWeb1.WebWorksheets[0].Cells["A1"];
            WebComments comments = GridWeb1.WebWorksheets[0].Comments
            WebComment comment = comments.AddComment(cell);
            comment.Note = "First note.";
            
            [Visual Basic]
            'Add comment to cell A1
            Dim cell as WebCell = GridWeb1.WebWorksheets(0).Cells("A1");
            Dim comments as WebComments = GridWeb1.WebWorksheets(0).Comments
            Dim comment as WebComment = comments.AddComment(cell);
            comment.Note = "First note.";
             
            </code></example></member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebComment.Note">
      <summary>
            Represents the content of comment.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.WebComments">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.GridWeb.Data.WebComment" /> objects.
            </summary>
      <example>
        <code>
            [C#]
            WebComments comments = GridWeb1.WebWorksheets[0].Comments;
            WebComment comment = comments[0];
            
            [Visual Basic]
            Dim comments as WebComments = GridWeb1.WebWorksheets(0).Comments
            Dim comment as WebComment = comments(0)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebComments.GetComment(Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Gets the cell's comment object. If there is no comment of the cell, returns null.
            </summary>
      <param name="cell">The cell object.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebComments.AddComment(Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Adds a comment object for the cell.
            </summary>
      <param name="cell">The cell object.</param>
      <returns>The created comment object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebComments.AddComment(System.Int32,System.Int32)">
      <summary>
            Adds a comment object for the cell.
            </summary>
      <param name="row">The row number(zero based).</param>
      <param name="column">The column number(zero based).</param>
      <returns>The created comment object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebComments.AddComment(System.String)">
      <summary>
            Adds a comment object for the cell.
            </summary>
      <param name="cellName">The cell's name(like "A1", "G5", etc.).</param>
      <returns>The created comment object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebComments.RemoveComment(Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Removes the comment object of the cell.
            </summary>
      <param name="cell">The cell object.</param>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebComments.Item(System.Int32)">
      <summary>
            Gets a comment by index.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.CustomCollectionHelper">
      <summary>
            Provides some methods to convert hierarchical custom collections to dataset.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.CustomCollectionHelper.ConvertRelatedDataSet(System.Collections.IList,System.Collections.IList,System.String)">
      <summary>
            Converts hierarchical custom collections to dataset.
            </summary>
      <param name="parentCustomCollection">parent custom collection.</param>
      <param name="childCustomCollection">child custom collection.</param>
      <param name="relationKey">relation key of two custom collections.</param>
      <returns>a DataSet object which contains relations.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.CustomCollectionHelper.ConvertRelatedDataSet(System.Collections.ArrayList,System.String[])">
      <summary>
            Converts hierarchical custom collections to dataset.
            </summary>
      <param name="customCollectionList">custom collection list.</param>
      <param name="relationKeysArray">array of relation keys.</param>
      <returns>a DataSet object which contains relations.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.CustomCollectionHelper.ConvertDataTable(System.Collections.IList)">
      <summary>
            Converts a custom collection to DataTable.
            </summary>
      <param name="customCollection">custom collection.</param>
      <returns>a DataTable object.</returns>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.CustomFunctionHandler">
      <summary>
            Represents a custom function handler. The paramList is the function's parameters collection.
            The return value is the function's result object.
            The handler instance must throw a CustomFunctionException when an error occurs.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.HyperlinkActionType">
      <summary>
            Hyperlink has two action type: UrlLink and CellCommand.
            UrlLink type hyperlink is an anchor in a cell, click it will navigate to another page or open a new browser window.
            CellCommand type hyperlink is an command button in a cell, click it will generate a server side event.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.HyperlinkActionType.UrlLink">
      <summary>
            Url link. An anchor in a cell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.HyperlinkActionType.CellCommand">
      <summary>
            Cell command button.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.Hyperlink">
      <summary>
            Represents a hyperlink object.
            A Hyperlink object can be two type: UrlLink or CellCommand.
            </summary>
      <example>
        <code>
            	[C#]
            	WebCell cell = GridWeb1.WebWorksheet[0].Cells["A1"];
            	Hyperlink hlink = GridWeb1.WebWorksheets[0].Hyperlinks.AddHyperlink(cell);
            	hlink.Text = "Aspose Web Site";
            	hlink.ImageUrl = "http://www.aspose.com/img/logo.gif";
            	hlink.Url = "http://www.aspose.com";
            	hlink.Target = "_blank";
            	hlink.ActionType = HyperlinkActionType.UrlLink;
            	[VB]
            	Dim cell As WebCell = GridWeb1.WebWorksheets(0).Cells("A1")
            	Dim hlink As Hyperlink = GridWeb1.WebWorksheet(0).Hyperlinks.AddHyperlink(cell)
            	hlink.Text = "Aspose Web Site"
            	hlink.ImageUrl = "http://www.aspose.com/img/logo.gif"
            	hlink.Url = "http://www.aspose.com"
            	hlink.Target = "_blank"
            	hlink.ActionType = HyperlinkActionType.UrlLink
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.Hyperlink.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Hyperlink.CellCommand">
      <summary>
            Gets or sets the Cell Command name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Hyperlink.ActionType">
      <summary>
            Gets or sets the hyperlink's action type.
            It may be ActionTpye.UrlLink or ActionType.CellCommand.
            The UrlLink Type means that the hyperlink is a link to a web page or a mail receipt. For example: "http://www.aspose.com" or "mailto:admin@aspose.com".
            The CellCommand Type means that the hyperlink will fire a CellCommand event, and you may handle this event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Hyperlink.Url">
      <summary>
            Gets or sets the URL string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Hyperlink.Text">
      <summary>
            Gets or sets the displayed text of the hyperlink.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Hyperlink.ImageUrl">
      <summary>
            Gets or sets the hyperlink's image url. If sets to null or empty string, the hyperlink will only display it's text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Hyperlink.Target">
      <summary>
            Gets or sets the hyperlink's target window.
            Default value is "_blank", this cause the browser open a new window when user click the hyperlink.
            Could be set to null, "_self", "_top", "_parent" or other customized names.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Hyperlink.ToolTip">
      <summary>
            Gets or sets the tooltip of the hyperlink.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Hyperlink.DiscardInput">
      <summary>
            Indicates whether to discard user input at client browser when user click this CellCommand hyperlink. Could be used as an "undo" action.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.CellImage">
      <summary>
            CellImage is used to create a image in a cell. It's a subclass of Hyperlink.
            </summary>
      <example>
        <code>
            	[C#]
            	WebCell cell = GridWeb1.WebWorksheet[0].Cells["A1"];
            	CellImage image = GridWeb1.WebWorksheets[0].CellImages.AddCellImage(cell);
            	image.ImageUrl = "http://www.aspose.com/img/logo.gif";
            	[VB]
            	Dim cell As WebCell = GridWeb1.WebWorksheets(0).Cells("A1")
            	Dim image As CellImage = GridWeb1.WebWorksheet(0).CellImages.AddCellImage(cell)
            	image.ImageUrl = "http://www.aspose.com/img/logo.gif"
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.CellImage.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.Hyperlinks">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.GridWeb.Data.Hyperlink" /> and <see cref="T:Aspose.Cells.GridWeb.Data.CellImage" /> objects.
            </summary>
      <example>
        <code>
            [C#]
            Hyperlinks hyperlinks = GridWeb1.WebWorksheets[0].Hyperlinks;
            Hyperlink hyperlink = hyperlinks[0];
            Hyperlinks images = GridWeb1.WebWorksheets[0].CellImages;
            CellImage image = images[1];
            [Visual Basic]
            Dim hyperlinks as Hyperlinks = GridWeb1.WebWorksheets(0).Hyperlinks
            Dim hyperlink as Hyperlink = Hyperlinks(0)
            Dim images as Hyperlinks = GridWeb1.WebWorksheets(0).CellImages
            Dim image as CellImage = images(1)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.Hyperlinks.GetHyperlink(Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Gets the cell's Hyperlink object. If there is no Hyperlink of the cell, returns null.
            </summary>
      <param name="cell">The cell object.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.Hyperlinks.AddHyperlink(Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Adds a Hyperlink object for the cell.
            </summary>
      <param name="cell">The cell object.</param>
      <returns>The created Hyperlink object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.Hyperlinks.AddHyperlink(System.Int32,System.Int32)">
      <summary>
            Adds a Hyperlink object for the cell.
            </summary>
      <param name="row">The row number(zero based).</param>
      <param name="column">The column number(zero based).</param>
      <returns>The created Hyperlink object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.Hyperlinks.AddHyperlink(System.String)">
      <summary>
            Adds a Hyperlink object for the cell.
            </summary>
      <param name="cellName">The cell's name(like "A1", "G5", etc.).</param>
      <returns>The created Hyperlink object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.Hyperlinks.RemoveHyperlink(Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Removes the Hyperlink object of the cell.
            </summary>
      <param name="cell">The cell object.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.Hyperlinks.GetCellImage(Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Gets the cell's CellImage object. If there is no CellImage of the cell, returns null.
            </summary>
      <param name="cell">The cell object.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.Hyperlinks.AddCellImage(Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Adds a CellImage object for the cell.
            </summary>
      <param name="cell">The cell object.</param>
      <returns>The created CellImage object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.Hyperlinks.AddCellImage(System.Int32,System.Int32)">
      <summary>
            Adds a CellImage object for the cell.
            </summary>
      <param name="row">The row number(zero based).</param>
      <param name="column">The column number(zero based).</param>
      <returns>The created CellImage object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.Hyperlinks.AddCellImage(System.String)">
      <summary>
            Adds a CellImage object for the cell.
            </summary>
      <param name="cellName">The cell's name(like "A1", "G5", etc.).</param>
      <returns>The created CellImage object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.Hyperlinks.RemoveCellImage(Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Removes the CellImage object of the cell.
            </summary>
      <param name="cell">The cell object.</param>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Hyperlinks.Item(System.Int32)">
      <summary>
            Gets a Hyperlink by index.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.Name">
      <summary>
            Represents a defined name for a range of cells. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.Name.ParseRefersTo(System.String@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>
            Parses the formula that the name is defined to refer to.
            </summary>
      <param name="sheetName">WebWorksheet's name.</param>
      <param name="startRow">Start Row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Name.Text">
      <summary>
            Gets the name text of the object. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Name.RefersTo">
      <summary>
            Gets the formula that the name is defined to refer to.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Name.SheetIndex">
      <summary>
            Indicates this name is global name or belongs to Worksheet. 0 = Global name, otherwise index to sheet (one-based) 
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.NameCollection">
      <summary>
            Represents a collection of all the Name objects in the spreadsheet. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.NameCollection.Add(System.String,System.String)">
      <summary>
            Defines a new global name.
            </summary>
      <param name="text">Name text.</param>
      <param name="refersTo">The formula that the name is defined to refer to.</param>
      <returns>Name object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.NameCollection.Add(System.String,System.String,System.Int32)">
      <summary>
            Defines a new name.
            </summary>
      <param name="text">Name text.</param>
      <param name="refersTo">The formula that the name is defined to refer to.</param>
      <param name="sheetIndex">Name's SheetIndex.</param>
      <returns>Name object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.NameCollection.Remove(Aspose.Cells.GridWeb.Data.Name)">
      <summary>
            Removes the name.
            </summary>
      <param name="name">Name object.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.NameCollection.Remove(System.String)">
      <summary>
            Removes the name by specified text.
            </summary>
      <param name="text">Name text.</param>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.NameCollection.Item(System.String)">
      <summary>
            Gets the Name element with the specified name.
            </summary>
      <param name="text">Name text.</param>
      <returns>Name object.</returns>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.NameCollection.Item(System.Int32)">
      <summary>
            Gets the Name element at the specified index. 
            </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>Name object.</returns>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.Picture">
      <summary>
            Encapsulates the object that represents a single picture in a spreadsheet.
            </summary>
      <example>
        <code>
            [C#]
            WebWorksheet sheet = GridWeb1.WebWorksheets[0];
            Picture picture = sheet.Pictures.AddPicture(3, 4);
            picture.Image = System.Drawing.Image.FromFile(@"c:\excel\1.bmp");
            
            [VB]
            Dim sheet As WebWorksheet = GridWeb1.WebWorksheets(0)
            Dim picture as Picture = sheet.Pictures.AddPicture(3, 4)
            picture.Image = System.Drawing.Image.FromFile("c:\excel\1.bmp")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Picture.LeftOffset">
      <summary>
            Represents the horizontal offset of shape from its left column, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Picture.TopOffset">
      <summary>
            Represents the vertical offset of shape from its top row, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Picture.WidthScale">
      <summary>
            Gets and sets the width scale, in unit of percent of the original picture width.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Picture.HeightScale">
      <summary>
            Gets and sets the height scale,in unit of percent of the original picture height.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.Picture.Image">
      <summary>
            Gets or sets the Image object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PictureCollection">
      <summary>
            Encapsulates a collection of Picture objects. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PictureCollection.GetPictures(Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Gets the cell's Pictures object. If there is no Picture of the cell, returns null.
            </summary>
      <param name="cell">The cell object.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PictureCollection.AddPicture(Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Adds a Picture object for the cell.
            </summary>
      <param name="cell">The cell object.</param>
      <returns>The created Picture object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PictureCollection.AddPicture(System.Int32,System.Int32)">
      <summary>
            Adds a Picture object for the cell.
            </summary>
      <param name="row">The row number(zero based).</param>
      <param name="column">The column number(zero based).</param>
      <returns>The created Picture object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PictureCollection.AddPicture(System.String)">
      <summary>
            Adds a Picture object for the cell.
            </summary>
      <param name="cellName">The cell's name(like "A1", "G5", etc.).</param>
      <returns>The created Picture object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PictureCollection.RemovePicture(Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Removes the Picture object of the cell.
            </summary>
      <param name="cell">The cell object.</param>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PictureCollection.Item(System.Int32)">
      <summary>
            Gets a Picture by index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PictureCollection.Count">
      <summary>
            picture numbers of a worksheet
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.RowFilterSettings">
      <summary>
            Summary description for RowFilter.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.RowFilterSettings.CustomFilter(System.Int32,Aspose.Cells.GridWeb.Data.ICustomFilter)">
      <summary>
            Specifies a custom filter.
            </summary>
      <param name="headerRow">Header row index.</param>
      <param name="customFilter">An instance of ICustomFilter.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.RowFilterSettings.BuildAutoFilterCriteria">
      <summary>
            Builds criteria string from auto filter settings.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.RowFilterSettings.FilterRows">
      <summary>
            Filters rows using criteria string.
            </summary>
      <returns>Filtered indexes list of rows.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.RowFilterSettings.ClearFilter">
      <summary>
            Clears all filter settings and display all rows.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.RowFilterSettings.EnableAutoFilter">
      <summary>
            Enables auto filtering. The HeaderRow will display dropdown buttons to let user select the column's value to be filtered.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.RowFilterSettings.StartRow">
      <summary>
            The start row number of the filter range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.RowFilterSettings.EndRow">
      <summary>
            The end row number of the filter range. If this value is set to -1, the last row number of the sheet is used.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.RowFilterSettings.HeaderRow">
      <summary>
            The header row number which will display filter dropdown buttons.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.RowFilterSettings.Criteria">
      <summary>
            The filter criteria string. 
            <code>
            CELL0 = 12.3<br />
            CELL1 = "ABC"<br />
            AND(CELL0 = 123, CELL1 = "ABC")<br />
            OR(CELL0 = 123, CELL1 = "ABC")<br />
            CELL0 = B1 + 4<br /></code></summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.ICustomFilter">
      <summary>
            Summary description for ICustomFilter.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.ICustomFilter.GetFilterValueList(Aspose.Cells.GridWeb.Data.WebWorksheet,System.Int32)">
      <summary>
            Provides a value list to the specified column for filtering.
            </summary>
      <param name="sheet">WebWorksheet object.</param>
      <param name="columnIndex">Column index.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.ICustomFilter.FilterRows(Aspose.Cells.GridWeb.Data.WebWorksheet,System.Int32,System.Int32)">
      <summary>
            Filters data by specified column and filter index.
            </summary>
      <param name="sheet">WebWorksheet object.</param>
      <param name="columnIndex">Column index.</param>
      <param name="filterIndex">Filter index.</param>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.SortOrientation">
      <summary>
            Represents sorting orientation
            </summary>
      <remarks>
            SortOrientation.SortTopToBottom represents sorting datas from top to bottom and exchanging data row by row.
            SortOrientation.SortLeftToRight represents sorting datas from left to right and exchanging data column by column.
            </remarks>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.SortOrientation.SortTopToBottom">
      <summary>
            Represents sorting datas from top to bottom and exchanging data row by row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.SortOrientation.SortLeftToRight">
      <summary>
            Represents sorting datas from left to right and exchanging data column by column.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.SortOrder">
      <summary>
            Represents what order the data sort by.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.SortOrder.Ascending">
      <summary>
            Sorts by ascending
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.SortOrder.Descending">
      <summary>
            Sorts by descending
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.WebCell">
      <summary>
             Represents a web cell.
             </summary>
      <example>
        <code>
             [C#]
            	WebWorksheets sheets = GridWeb1.WebWorksheets;
             WebWorksheet sheet = sheets[sheets.Add("demo1")];
            
            	// Gets an webcell object
             WebCell cell = sheet.Cells[0,0];
            	cell.PutValue("Demo Text");
            
            	Aspose.Cells.GridWeb.TableItemStyle style = cell.GetStyle();
             style.Font.Size = new FontUnit("72pt");
            	style.Wrap = false;
            	
            	style.BackColor = Color.Gray;
             style.BorderStyle = BorderStyle.Solid;
            	style.BorderWidth = new Unit(1, UnitType.Pixel);
            	style.BorderColor = Color.Silver;
             cell.SetStyle(style);
            	
            	[Visual Basic]
            	Dim sheets As WebWorksheets =  GridWeb1.WebWorksheets 
            	Dim sheet As WebWorksheet =  sheets(sheets.Add(__0__)) 
            	
            	' Gets an webcell object
            	Dim cell As WebCell =  sheet.Cells(0,0) 
            	cell.PutValue("Demo Text")
            	
             Dim style As Aspose.Cells.GridWeb.TableItemStyle = cell.GetStyle()
            	style.Font.Size = New FontUnit("72pt")
            	style.Wrap = False
            	
            	style.BackColor = Color.Gray
            	style.BorderStyle = BorderStyle.Solid
            	style.BorderWidth = New Unit(1, UnitType.Pixel)
            	style.BorderColor = Color.Silver
             cell.SetStyle(style)
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCell.PutValue(System.Boolean)">
      <summary>
            Sets the cell's value with a boolean value.
            </summary>
      <param name="boolValue">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCell.PutValue(System.DateTime)">
      <summary>
            Sets the cell's value with a DateTime value.
            </summary>
      <param name="dateTimeValue">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCell.PutValue(System.Double)">
      <summary>
            Sets the cell's value with a double value.
            </summary>
      <param name="doubleValue">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCell.PutValue(System.Int32)">
      <summary>
            Sets the cell's value with a int value.
            </summary>
      <param name="intValue">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCell.PutValue(System.String)">
      <summary>
            Sets the cell's value with a string value.
            </summary>
      <param name="stringValue">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCell.PutValue(System.Object)">
      <summary>
            Sets the cell's value with an variant type value.
            </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCell.PutValue(System.String,System.Boolean)">
      <summary>
            Sets the cell's value with a string value.
            </summary>
      <param name="stringValue">Input value.</param>
      <param name="isConverted">True: converted to other data type if appropriate.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCell.PutValueAndSetFormatByValue(System.String)">
      <summary>
            Sets the cell's value with a string value and set cell format by this value.
            </summary>
      <param name="stringValue">Input value.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCell.GetStyle">
      <summary>
            Gets the copy of cell style.
            </summary>
      <returns>Style object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCell.SetStyle(Aspose.Cells.GridWeb.TableItemStyle)">
      <summary>
            Sets the cell style.
            </summary>
      <param name="style">The cell style.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCell.CreateValidation(Aspose.Cells.GridWeb.ValidationType,System.Boolean)">
      <summary>
            Creates a validation object for a cell.
            </summary>
      <param name="validationType">Validation type.</param>
      <param name="isRequried">Whether the cell value is required.</param>
      <returns>
      </returns>
      <example>
        <code>
            [C#]
            	Validation v = cell1.CreateValidation(ValidationType.CustomExpression, true);
            	// Sets to number validation expression.
            	v.RegEx = "\\d+";
            	
            [Visual Basic]
            	Dim v As Validation =  cell1.CreateValidation(ValidationType.CustomExpression,True) 
            	 ' Sets to number validation expression.
            	v.RegEx = "\\d+"
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCell.RemoveValidation">
      <summary>
            Removes the validation object of the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.Row">
      <summary>
            Gets the row number of the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.Column">
      <summary>
            Gets the column number of the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.Name">
      <summary>
            Gets the name of the cell.
            For example: A1, F102.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.StringValue">
      <summary>
            Gets or sets the string value of the cell.
            The "set" method and the PutValue(string) method are identical.
            The "get" method will return a formatted string if the NumberType or the Custom property is set. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.NeedValidate">
      <summary>
            Gets or sets the whether need to validate the cell input.in PutValueAndSetFormatByValue,it will add validation ,
            if gridweb.ForceValidation is not enabled ,it will not take affect
            this is worked for user set cell value way ,not worked for load from existed excel file way
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.AcceptEmpty">
      <summary>
            Gets or sets the AcceptEmpty of the cell.only take effect when NeedValidate is true
            if gridweb.ForceValidation is not enabled ,it will not take affect
            this is worked for user set cell value way ,not worked for load from existed excel file way
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.Value">
      <summary>
            Gets the object value of the cell. The value type could be bool, DateTime, double, int, string.
            The default type is string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.NumberType">
      <summary>
            Gets or sets the number format type of the cell. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.Custom">
      <summary>
            Gets or sets the custom format string of the cell, null or empty string means no custom format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.Formula">
      <summary>
            Gets or sets the formula string of the cell.
            Returns null when the cell doesn't contain a formula.
            </summary>
      <example>
        <code>
            [C#]
            	cell.Formula = "=SUM(A1:C3) + E6*2";
            [Visual Basic]
            	cell.Formula = "=SUM(A1:C3) + E6*2"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.Style">
      <summary>
            Gets or sets the TableItemStyle of the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.IsReadonly">
      <summary>
            Gets or sets whether the cell is readonly.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.Validation">
      <summary>
            Gets or sets the validation object. If not created before, return null.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.IsLocked">
      <summary>
            Gets or sets a value indicating whether a cell can be modified or not when its worksheet is protected.
            When its worksheet is protected and IsLocked is true, the cell can not be edit. When its worksheet is
            protected and IsLocked is false, the cell can be edit.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCell.UnformattedStringValue">
      <summary>
            Gets the unformatted string value.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.WebCellErrorType">
      <summary>
            Used in WebCellException. Represents the cell error type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.WebCellErrorType.ValidationError">
      <summary>
            The cell's validation failed.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.WebCellErrorType.DataSourceInsertError">
      <summary>
            When insert the sheet's binding row to datasource, an error occured.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.WebCellErrorType.DataSourceUpdateError">
      <summary>
            When update the sheet's binding row or object's field, an error occured. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.WebCellErrorType.DataSourceDeleteError">
      <summary>
            When delete the sheet's binding row to datasource, an error occured.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.OnErrorActionType">
      <summary>
            Used in CellError event of the GridWeb. User set the OnErrorActionQuery.OnErrorAction to tell the control Stop processing or Ignore error.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.OnErrorActionType.Throw">
      <summary>
            Throws the current exception.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.OnErrorActionType.Stop">
      <summary>
            Stops current processing.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.OnErrorActionType.Ignore">
      <summary>
            Ignores the error and continue processing.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.WebCellException">
      <summary>
            Represents a cell operation error.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCellException.Cell">
      <summary>
            Gets the error cell. If the Cell is null, the error is cause by an CommitNewBindRow operation, that means the DataTable rejected the new created row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCellException.ErrorType">
      <summary>
            Gets the error type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCellException.ErrorValue">
      <summary>
            Get the error value.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.OnErrorActionQuery">
      <summary>
            Used in the CellError event of the GridWeb.
            </summary>
      <example>
        <code>
            [C#]
            onErrorActionQuery.OnErrorAction = OnErrorActionType.Ignore;
            [VB]
            onErrorActionQuery.OnErrorAction = OnErrorActionType.Ignore
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.OnErrorActionQuery.OnErrorAction">
      <summary>
            Gets or set the action type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.WebCellArea">
      <summary>
            Represents an area of cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.WebCellArea.StartRow">
      <summary>
            Gets or sets the start row of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.WebCellArea.EndRow">
      <summary>
            Gets or sets the end row of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.WebCellArea.StartColumn">
      <summary>
            Gets or sets the start column of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.WebCellArea.EndColumn">
      <summary>
            Gets or sets the end column of this area.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCellArea.Equals(System.Object)">
      <summary>
            Test if the object equals to another WebCellArea object.
            </summary>
      <param name="obj">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCellArea.GetHashCode">
      <summary>
            Get the hashcode.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.WebCells">
      <summary>
             Encapsulates a collection of <see cref="T:Aspose.Cells.GridWeb.Data.WebCell" /> objects.
             </summary>
      <example>
        <code>
             
             [C#]
             ...
             using System.Web.UI.WebControls;
             ...
             ...
             
             WebWorksheets Worksheets = GridWeb1.WebWorksheets;
            	WebCells cells = Worksheets[0].Cells;
            	
            	//Sets default row height
            	cells.StandardHeight = new Unit(16, UnitType.Point);
            	//Sets row height
            	cells.SetRowHeight(2, new Unit(20, UnitType.Point));
            	
            	//Sets default colum width
            	cells.StandardWidth = new Unit(50, UnitType.Point);
            	//Sets column width
            	cells.SetColumnWidth(3, new Unit(80, UnitType.Point));
            	
            	//Merge cells
            	cells.Merge(5, 4, 2, 2);
            	
            	//Import data
            	DataSet1 ds1 = new DataSet1();
            
            	for (int i =0; i&lt;16; i++)
            	{
            		DataSet1.Table1Row row = ds1.Table1.NewTable1Row();
            		row["c1"] = "hello1";
            		row["c2"] = i;
            		row["c3"] = "data";
            		ds1.Table1.AddTable1Row(row);
            	}
            
            	GridWeb1.WebWorksheets.ImportDataView(ds1.Table1.DefaultView, null, null);
             
             //Import from excel file
             Worksheets.ImportExcelFile("c:\\file1.xls");
             
             [Visual Basic]
            	...
            	Imports System.Web.UI.WebControls
            	...
            	...
            	 
            	Dim Worksheets As WebWorksheets =  GridWeb1.WebWorksheets 
            	Dim cells As WebCells =  Worksheets(0).Cells 
            	 
            	'Sets default row height
            	cells.StandardHeight = New Unit(16, UnitType.Point)
            	'Sets row height
            	cells.SetRowHeight(2,New Unit(20,UnitType.Point))
            	 
            	'Sets default colum width
            	cells.StandardWidth = New Unit(50, UnitType.Point)
            	'Sets column width
            	cells.SetColumnWidth(3,New Unit(80,UnitType.Point))
            	 
            	'Merge cells
            	cells.Merge(5, 4, 2, 2)
            	 
            	'Import data
            	Dim ds1 As DataSet1 =  New DataSet1() 
            	 
            	Dim i As Integer
            	For  i = 0 To 15
            		Dim row As DataSet1.Table1Row =  ds1.Table1.NewTable1Row() 
            		row("c1") = "hello1"
            		row("c2") = i
            		row("c3") = "data"
            		ds1.Table1.AddTable1Row(row)
            	Next
            	 
            	GridWeb1.WebWorksheets.ImportDataView(ds1.Table1.DefaultView, Nothing, Nothing)
            	 
            	'Import from excel file
            	Worksheets.ImportExcelFile("c:\\file1.xls")
            	</code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.Clear">
      <summary>
            Clear all cells in the collection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.ClearContents(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Clears contents of a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.DeleteRow(System.Int32)">
      <summary>
            Deletes a row.
            </summary>
      <param name="rowIndex">Row index.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.DeleteRows(System.Int32,System.Int32)">
      <summary>
            Deletes a number of rows. This method is much faster than DeleteRow when doing a batch row deleting.
            </summary>
      <param name="rowIndex">
      </param>
      <param name="rows">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.InsertRow(System.Int32)">
      <summary>
            Inserts a new row into the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.InsertRows(System.Int32,System.Int32)">
      <summary>
            Inserts a number of rows into the worksheet. This method is much faster than InsertRow when doing a batch row insertion.
            </summary>
      <param name="rowIndex">The row index to be inserted.</param>
      <param name="rows">The number of rows.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.DeleteColumn(System.Int32)">
      <summary>
            Deletes a column.
            </summary>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.InsertColumn(System.Int32)">
      <summary>
            Inserts a new column into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.GetColumnCaption(System.Int32)">
      <summary>
            Gets the column caption. If the caption is not set, returns empty string.
            </summary>
      <param name="column">Column index.</param>
      <returns>The column caption. If the caption is not set, returns empty string.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.SetColumnCaption(System.Int32,System.String)">
      <summary>
            Sets the caption for the column.
            </summary>
      <param name="column">Column index.</param>
      <param name="caption">The column caption. Pass null or empty string if you want cancel the caption.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.GetRowCaption(System.Int32)">
      <summary>
            Gets the row caption. If the caption is not set, returns empty string.
            </summary>
      <param name="row">Row index.</param>
      <returns>The row caption. If the caption is not set, returns empty string.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.SetRowCaption(System.Int32,System.String)">
      <summary>
            Sets the caption for the row.
            </summary>
      <param name="row">Row index.</param>
      <param name="caption">The row caption. Pass null or empty string if you want cancel the caption.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.GetColumnWidth(System.Int32)">
      <summary>
            Gets the width of the specified column
            </summary>
      <param name="column">Column index</param>
      <returns>Width of column</returns>
      <remarks>
            Only support UnitType.Point unit type.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.SetColumnWidth(System.Int32,System.Web.UI.WebControls.Unit)">
      <summary>
            Sets the width of the specified column.
            </summary>
      <param name="column">Column index.</param>
      <param name="width">Width of column.</param>
      <remarks>
            Only support UnitType.Point unit type.
            To hide a column, sets column width to zero.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.GetRowHeight(System.Int32)">
      <summary>
            Gets the height of a specified row.
            </summary>
      <param name="row">Row index</param>
      <returns>Height of row</returns>
      <remarks>
            Only support UnitType.Point unit type.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.SetRowHeight(System.Int32,System.Web.UI.WebControls.Unit)">
      <summary>
            Sets the height of the specified row.
            </summary>
      <param name="row">Row index.</param>
      <param name="height">Height of row.</param>
      <remarks>
            Only support UnitType.Point unit type.
            To hide a row, sets row height to zero.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.GetRowHiddenStatus(System.Int32)">
      <summary>
            Get hidden status of a specified row.
            </summary>
      <param name="row">Row index.</param>
      <returns>Hidden status of row.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.SetRowHiddenStatus(System.Int32,System.Boolean)">
      <summary>
            Set hidden status of a specified row.
            </summary>
      <param name="row">Row index.</param>
      <param name="isHidden">Hidden status of row.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.Merge(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Merges a specified range of cells into a single cell. 		
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="rowNumber">Number of rows(one based)</param>
      <param name="columnNumber">Number of columns(one based)</param>
      <remarks>
            Reference the merged cell via the address of the upper-left cell in the range. 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.Unmerge(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Unmerges a specified range of cells. 		
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="rowNumber">Number of rows(one based)</param>
      <param name="columnNumber">Number of columns(one based)</param>
      <remarks>
            Reference the merged cell via the address of the upper-left cell in the range. 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.SetStyle(System.Int32,System.Int32,System.Int32,System.Int32,Aspose.Cells.GridWeb.TableItemStyle)">
      <summary>
            Sets the style to a specified range of cells.
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="rowNumber">Number of rows(one based)</param>
      <param name="columnNumber">Number of columns(one based)</param>
      <param name="style">The style object to be set</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.SetStyle(System.String,Aspose.Cells.GridWeb.TableItemStyle)">
      <summary>
            Sets the style to a specified range of cells.
            </summary>
      <param name="cellRange">The range of cells' names, like "A1:D6"</param>
      <param name="style">The style object to be set</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.CellIndexToName(System.Int32,System.Int32)">
      <summary>
            Gets cell name according to its row and column indexes.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>Name of cell.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.CellNameToIndex(System.String,System.Int32@,System.Int32@)">
      <summary>
            Gets the cell row and column indexes according to its name
            </summary>
      <param name="cellName">Name of cell.</param>
      <param name="row">Output row index</param>
      <param name="column">Output column index</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.RowIndexToName(System.Int32)">
      <summary>
            Gets row name according to row index.
            </summary>
      <param name="row">Row index.</param>
      <returns>Name of row.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.ColumnIndexToName(System.Int32)">
      <summary>
            Gets column name according to row index.
            </summary>
      <param name="column">Column index.</param>
      <returns>Name of column.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.GetEnumerator">
      <summary>
            Internal use only.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the cells to an array.
            </summary>
      <param name="array">The array object.</param>
      <param name="index">The index of the first cell to copy.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.SetBorders(System.Int32,System.Int32,System.Int32,System.Int32,Aspose.Cells.GridWeb.SetBorderPosition,Aspose.Cells.GridWeb.WebBorderStyle)">
      <summary>
            Sets borders for a cells range.
            </summary>
      <param name="firstRow">The first row number of the range(zero based).</param>
      <param name="firstColumn">The first column number of the range(zero based).</param>
      <param name="rowNumber">The rows number.</param>
      <param name="columnNumber">The columns number.</param>
      <param name="position">The border position.</param>
      <param name="borderStyle">The border style.</param>
      <example>
        <code>
            [C#]
            	GridWeb1.WebWorksheets[0].Cells.SetBorders(0, 0, 5, 8, SetBorderPosition.Outline, borderStyle1);
            
            [VB]
            	GridWeb1.WebWorksheets(0).Cells.SetBorders(0, 0, 5, 8, SetBorderPosition.Outline, borderStyle1)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.SetRowReadonly(System.Int32,System.Boolean)">
      <summary>
            Sets a row to readonly so user can't delete it from client side.
            </summary>
      <param name="rowIndex">row index.</param>
      <param name="isReadonly">true or false.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.SetColumnReadonly(System.Int32,System.Boolean)">
      <summary>
            Sets a column to readonly so user can't delete it from client side.
            </summary>
      <param name="columnIndex">column index.</param>
      <param name="isReadonly">true or false.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.GetRowReadonly(System.Int32)">
      <summary>
            Gets if a row is readonly.
            </summary>
      <param name="rowIndex">row index.</param>
      <returns>If readonly returns true.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.GetColumnReadonly(System.Int32)">
      <summary>
            Gets if a column is readonly.
            </summary>
      <param name="columnIndex">column index.</param>
      <returns>If readonly returns true.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.GetRowOutlineLevel(System.Int32)">
      <summary>
            Gets the outline level of the row.
            </summary>
      <param name="rowIndex">row index.</param>
      <returns>the outline level.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.SetRowOutlineLevel(System.Int32,System.Int32)">
      <summary>
            Sets the outline level of the row.
            </summary>
      <param name="rowIndex">row index.</param>
      <param name="outlineLevel">outline level.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.SetRowOutlineLevelAndStatus(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Sets the outline level of the row.
            </summary>
      <param name="rowIndex">row index.</param>
      <param name="outlineLevel">outline level.</param>
      <param name="isHidden">isHidden.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.Export(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Exports data in the Cells collection of a WebWorksheet to a new DataTable object
            </summary>
      <param name="startRow">The row number of the first cell to export out.</param>
      <param name="startColumn">The column number of the first cell to export out.</param>
      <param name="rows">Number of rows to be imported.</param>
      <param name="columns">Number of columns to be imported.</param>
      <param name="exportColumnName">Indicates whether the data in the first row are exported to the column name of the DataTable</param>
      <param name="isVertical">
            True if a row in Excel file represents a row in DataTable. 
            False if a column in Excel file represents a row in DataTable.</param>
      <returns>Exported DataTable object.</returns>
      <example>
        <code>
            
            [C#]
            
            DataTable exportTable = GridWeb1.WebWorksheets[0].Cells.Export(0,0,10,2,true,false);
            DataGrid1.DataSource = exportTable;
            DataGrid1.DataBind();
            
            [VB]
            
            Dim exportTable As DataTable =  GridWeb1.WebWorksheets(0).Cells.Export(0,0,10,2,True,False) 
            DataGrid1.DataSource = exportTable
            DataGrid1.DataBind()
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.Export(System.Data.DataTable,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Exports data in the Cells collection of a WebWorksheet to a specifed DataTable object. 
            </summary>
      <remarks>
            The method permits first create a DataTable object. Then exports data to the DataTable object. If dataTable don't be set valid, the method
            will return a new DataTable object by calling overload method 'Export(bool exportColumnName, bool isVertical)'.
            </remarks>
      <param name="dataTable">The DataTable object that exports data to.</param>
      <param name="startRow">The row number of the first cell to export out.</param>
      <param name="startColumn">The column number of the first cell to export out.</param>
      <param name="rows">Number of rows to be imported.</param>
      <param name="columns">Number of columns to be imported.</param>
      <param name="isVertical">
            True if a row in Excel file represents a row in DataTable. 
            False if a column in Excel file represents a row in DataTable.</param>
      <returns>Exported DataTable object.</returns>
      <example>
        <code>
            
            [C#]
            
            DataTable dataTable = new DataTable();
            dataTable.Columns.Add("Column a",System.Type.GetType("System.String"));
            dataTable.Columns.Add("Column b");
            dataTable.Columns.Add("Column c");
            dataTable.Columns.Add("Column d",System.Type.GetType("System.Double"));
            dataTable.Columns.Add("Column e",System.Type.GetType("System.Int32"));
            dataTable.Columns.Add("Column f",System.Type.GetType("System.Int32"));
            
            DataTable exportTable = GridWeb1.WebWorksheets[0].Cells.Export(dataTable,1,0,10,6,true);
            
            DataGrid1.DataSource = exportTable;
            DataGrid1.DataBind();
            
            [VB]
            
            Dim dataTable As DataTable =  New DataTable() 
            dataTable.Columns.Add("Column a",System.Type.GetType("System.String"))
            dataTable.Columns.Add("Column b")
            dataTable.Columns.Add("Column c")
            dataTable.Columns.Add("Column d",System.Type.GetType("System.Double"))
            dataTable.Columns.Add("Column e",System.Type.GetType("System.Int32"))
            dataTable.Columns.Add("Column f",System.Type.GetType("System.Int32"))
            
            Dim exportTable As DataTable =  GridWeb1.WebWorksheets(0).Cells.Export(dataTable,1,0,10,6,True) 
            
            DataGrid1.DataSource = exportTable
            DataGrid1.DataBind()
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.Sort(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sorts the datas ascend top to bottom in a range of a WebWorksheet by specified column index.
            </summary>
      <param name="startRow">The row number of the first cell to sort.</param>
      <param name="startColumn">The column number of the first cell to sort.</param>
      <param name="rows">Number of rows to be imported.</param>
      <param name="columns">Number of columns to be imported.</param>
      <param name="index">The column index that specifis the sort column.
            </param>
      <example>
        <code>
            
            [C#]
            
            GridWeb1.WebWorksheets[0].Cells.Sort(1,0,25,6,3);
            
            [VB]
            
            GridWeb1.WebWorksheets(0).Cells.Sort(1,0,25,6,3)
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.Sort(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Aspose.Cells.GridWeb.Data.SortOrder,Aspose.Cells.GridWeb.Data.SortOrientation,System.Boolean)">
      <summary>
            Sorts the datas ascend top to bottom in a range of a WebWorksheet by specified column index.
            </summary>
      <param name="startRow">The row number of the first cell to sort.</param>
      <param name="startColumn">The column number of the first cell to sort.</param>
      <param name="rows">Number of rows to be imported.</param>
      <param name="columns">Number of columns to be imported.</param>
      <param name="index">
            The column(or row) index that specifis the sort column(or row).
            If sort orientation is top to bottom, the index represents column index.
            If sort orientation is left to right, the index represents row index.
            </param>
      <param name="order">The sort order:Ascending or Descending
            </param>
      <param name="orientation">The sort orientation: top to bottom or left to right.</param>
      <param name="isCaseSensitive">Indicates whether the sort data is case sensitive if the data is string.</param>
      <example>
        <code>
            
            [C#]
            
            GridWeb1.WebWorksheets[0].Cells.Sort(0,1,4,14,3,SortOrder.Ascending,SortOrientation.SortLeftToRight,true)
            
            [VB]
            
            GridWeb1.WebWorksheets(0).Cells.Sort(0,1,4,14,3,SortOrder.Ascending,SortOrientation.SortLeftToRight,True)
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.Sort(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[])">
      <summary>
             Sorts the datas ascend top to bottom in a range of a WebWorksheet by some field that are specifed by column indexes array.
             </summary>
      <param name="startRow">The row number of the first cell to sort.</param>
      <param name="startColumn">The column number of the first cell to sort.</param>
      <param name="rows">Number of rows to be imported.</param>
      <param name="columns">Number of columns to be imported.</param>
      <param name="indexes">The column indexes array that specifies the data sorted by.
             </param>
      <example>
        <code>
             
             [C#]
             
             int[] indexes = new int[3];
             indexes[0] = 0;
             indexes[1] = 2;
             indexes[2] = 3;
             GridWeb1.WebWorksheets[0].Cells.Sort(1,0,25,6,indexes);
             
             [VB]
             
             Dim indexes() As Integer =  New Integer(3) {} 
             indexes(0) = 0
             indexes(1) = 2
             indexes(2) = 3
             GridWeb1.WebWorksheets(0).Cells.Sort(1,0,25,6,indexes)
            
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebCells.Sort(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[],Aspose.Cells.GridWeb.Data.SortOrder[],Aspose.Cells.GridWeb.Data.SortOrientation,System.Boolean)">
      <summary>
            Sorts the datas ascend  in a range of a WebWorksheet by some field that are specifed by  indexes array.
            </summary>
      <remarks>
            If you use this method to sort a block of data, please be sure that length of  the parameter indexes equals length of the parameter orders.
            </remarks>
      <param name="startRow">The row number of the first cell to sort.</param>
      <param name="startColumn">The column number of the first cell to sort.</param>
      <param name="rows">Number of rows to be imported.</param>
      <param name="columns">Number of columns to be imported.</param>
      <param name="indexes">
            The column(or row) index that specifis the sort column(or row).
            If sort orientation is top to bottom, the index represents column index.
            If sort orientation is left to right, the index represents row index.
            </param>
      <param name="orders">The sort order:Ascending or Descending
            </param>
      <param name="orientation">The sort orientation: top to bottom or left to right.</param>
      <param name="isCaseSensitive">Indicates whether the sorting is case sensitive.</param>
      <example>
        <code>
        </code>
            
            [C#]
            
            int[] indexes = new int[3];
            indexes[0] = 0;
            indexes[1] = 1;
            indexes[2] = 3;
            SortOrder[] orders = new SortOrder[3];
            orders[0] = SortOrder.Ascending;
            orders[1] = SortOrder.Descending;
            orders[2] = SortOrder.Descending;
            GridWeb1.WebWorksheets[0].Cells.Sort(0,1,4,14,indexes,orders,SortOrientation.SortLeftToRight,false);
            
            [VB]
            
            Dim indexes() As Integer =  New Integer(3) {} 
            indexes(0) = 0
            indexes(1) = 1
            indexes(2) = 3
            Dim orders() As SortOrder =  New SortOrder(3) {} 
            orders(0) = SortOrder.Ascending
            orders(1) = SortOrder.Descending
            orders(2) = SortOrder.Descending
            GridWeb1.WebWorksheets(0).Cells.Sort(0,1,4,14,indexes,orders,SortOrientation.SortLeftToRight,False)
            
            </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCells.Item(System.Int32,System.Int32)">
      <summary>
            Gets cell item within the cells collection.
            </summary>
      <param name="row">row number.</param>
      <param name="column">column number.</param>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCells.Item(System.String)">
      <summary>
            Gets cell item within the cells collection.
            </summary>
      <param name="cellName">cell name(in excel name format, like 'A1', 'F22')</param>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCells.Item(System.Int32)">
      <summary>
            Gets cell item within the cells collection.
            </summary>
      <param name="cellIndex">cell index in internal order.</param>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCells.MaxRow">
      <summary>
            Max row number of cell which contains data or style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCells.MinRow">
      <summary>
            Min row number of cell which contains data or style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCells.MaxColumn">
      <summary>
            Max column number of cell which contains data or style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCells.MinColumn">
      <summary>
            Min column number of cell which contains data or style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCells.StandardHeight">
      <summary>
            Gets or sets the default row height in this worksheet
            </summary>
      <remarks>
            Only support UnitType.Point unit type.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCells.StandardWidth">
      <summary>
            Gets or sets the default column width in the worksheet
            </summary>
      <remarks>
            Only support UnitType.Point unit type.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCells.MergedCells">
      <summary>
            Gets the collection of merged cells.
            </summary>
      <remarks>In this collection, each item is a <see cref="T:Aspose.Cells.GridWeb.Data.WebCellArea" /> structure which represents an area of merged cells.</remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCells.Count">
      <summary>
            Gets the count of the cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCells.IsSynchronized">
      <summary>
            Internal use only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebCells.SyncRoot">
      <summary>
            Internal use only.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.InitializeNewBindRowHandler">
      <summary>
            Represents the method that intend to handle InitializeNewBindRow event.
            sender: The worksheet object.
            bindObject: The new created bind object. Generally it's a DataRowView object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.SubtotalFunction">
      <summary>
            Represents subtotal function type. Used in the WebWorksheet.CreateSubtotal method.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.SubtotalFunction.AVERAGE">
      <summary>
            Average
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.SubtotalFunction.COUNT">
      <summary>
            Count the numeric cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.SubtotalFunction.COUNTA">
      <summary>
            Count the non-null cells
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.SubtotalFunction.MAX">
      <summary>
            Max
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.SubtotalFunction.MIN">
      <summary>
            Min
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.SubtotalFunction.PRODUCT">
      <summary>
            Product
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.SubtotalFunction.SUM">
      <summary>
            Sum
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.FreezePaneInfo">
      <summary>
            Represents the freeze pane's information.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.FreezePaneInfo.Row">
      <summary>
            Row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.FreezePaneInfo.Column">
      <summary>
            Column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.FreezePaneInfo.RowNumber">
      <summary>
            Freeze row number.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.FreezePaneInfo.ColumnNumber">
      <summary>
            Freeze column number.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.WebWorksheet">
      <summary>
             Represents a web worksheet.
             </summary>
      <example>
        <code>
             
             [C#]
             ...
             using System.Web.UI.WebControls;
             ...
             ...
             
             WebWorksheets Worksheets = GridWeb1.WebWorksheets;
            	WebCells cells = Worksheets[0].Cells;
            	
            	//Sets default row height
            	cells.StandardHeight = new Unit(16, UnitType.Point);
            	//Sets row height
            	cells.SetRowHeight(2, new Unit(20, UnitType.Point));
            	
            	//Sets default colum width
            	cells.StandardWidth = new Unit(50, UnitType.Point);
            	//Sets column width
            	cells.SetColumnWidth(3, new Unit(80, UnitType.Point));
            	
            	//Merge cells
            	cells.Merge(5, 4, 2, 2);
            	
            	//Import data
            	DataSet1 ds1 = new DataSet1();
            
            	for (int i =0; i&lt;16; i++)
            	{
            		DataSet1.Table1Row row = ds1.Table1.NewTable1Row();
            		row["c1"] = "hello1";
            		row["c2"] = i;
            		row["c3"] = "data";
            		ds1.Table1.AddTable1Row(row);
            	}
            
            	GridWeb1.WebWorksheets.ImportDataView(ds1.Table1.DefaultView, null, null);
             
             //Import from excel file
             Worksheets.ImportExcelFile("c:\\file1.xls");
             
             [Visual Basic]
            	Imports System.Web.UI.WebControls
            	...
            	...
            	 
            	Dim Worksheets As WebWorksheets =  GridWeb1.WebWorksheets 
            	Dim cells As WebCells =  Worksheets(0).Cells 
            	 
            	'Sets default row height
            	cells.StandardHeight = New Unit(16, UnitType.Point)
            	'Sets row height
            	cells.SetRowHeight(2,New Unit(20,UnitType.Point))
            	 
            	'Sets default colum width
            	cells.StandardWidth = New Unit(50, UnitType.Point)
            	'Sets column width
            	cells.SetColumnWidth(3,New Unit(80,UnitType.Point))
            	 
            	'Merge cells
            	cells.Merge(5, 4, 2, 2)
            	 
            	'Import data
            	Dim ds1 As DataSet1 =  New DataSet1() 
            	 
            	Dim i As Integer
            	For  i = 0 To 15
            		Dim row As DataSet1.Table1Row =  ds1.Table1.NewTable1Row() 
            		row("c1") = "hello1"
            		row("c2") = i
            		row("c3") = "data"
            		ds1.Table1.AddTable1Row(row)
            	Next
            	 
            	GridWeb1.WebWorksheets.ImportDataView(ds1.Table1.DefaultView, Nothing, Nothing)
            	 
            	'Import from excel file
            	Worksheets.ImportExcelFile("c:\\file1.xls")
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.SetAllCellsReadonly">
      <summary>
            Makes all cells readonly.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.SetAllCellsEditable">
      <summary>
            Makes all cells editable.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.SetReadonlyRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Makes a range of cells readonly.
            </summary>
      <param name="startRow">The start row of the range.</param>
      <param name="startColumn">The start column of the range.</param>
      <param name="rows">The number of the rows.</param>
      <param name="columns">The number of the columns.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.SetEditableRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Makes a range of cells editable.
            </summary>
      <param name="startRow">The start row of the range.</param>
      <param name="startColumn">The start column of the range.</param>
      <param name="rows">The number of the rows.</param>
      <param name="columns">The number of the columns.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.FreezePanes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the freeze pane.
            </summary>
      <param name="row">Row.</param>
      <param name="column">Column.</param>
      <param name="rowNumber">Row number.</param>
      <param name="columnNumber">Column number.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.UnfreezePanes">
      <summary>
            Resets freeze pane(unfreeze).
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.DataBind">
      <summary>
            Bind the sheet to the DataSource.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.CreateAutoGenratedColumns">
      <summary>
            After setting a datasource for the worksheet, call this method to generate the bind columns automatically.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.UpdateBindCellValue(Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Updates the binding datasource record's property value according to the cell's value.
            </summary>
      <example>
        <code>
            cell.PutValue(23.11);
            sheet.UpdateBindCellValue(cell);
            </code>
      </example>
      <param name="cell">The cell object.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.CreateNewBindRow">
      <summary>
            Creates a new bind row and bind to the datasource.
            </summary>
      <returns>The row index of the new row. If no row is created, returns -1.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.CommitNewBindRow">
      <summary>
            Commits the new added bind row and add it to the datasource.
            </summary>
      <returns>The row index of the new row. If no row is created, returns -1.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.CancelNewBindRow">
      <summary>
            Cancels and deletes the new added bind row.
            </summary>
      <returns>The row index. If there is no new created bind row, returns -1.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.DeleteBindRow(System.Int32)">
      <summary>
            Deletes a bind row.
            </summary>
      <param name="rowNum">The row index.</param>
      <returns>The deleted row index. If no bind row is deleted, returns -1.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.GetRowBindObject(System.Int32)">
      <summary>
            Gets the binding object of the row in binding mode. Generally it's a DataRowView object.
            </summary>
      <param name="row">The row index.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.Copy(Aspose.Cells.GridWeb.Data.WebWorksheet)">
      <summary>
            Copies from another worksheet object.
            </summary>
      <param name="source">The other sheet.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.GetRowExpand(System.Int32)">
      <summary>
            Gets a bool value that indicates whether the row is expanded and showing the child view content in the databinding mode.
            </summary>
      <param name="rowIndex">Row index.</param>
      <returns>A bool value.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.SetRowExpand(System.Int32,System.Boolean)">
      <summary>
            Sets whether the row is expanded and showing the child view content in the databinding mode.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="isExpand">A bool value.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.GetColumnHeaderHyperlink(System.Int32)">
      <summary>
            Gets the hyperlink object of the column header.
            </summary>
      <param name="colIndex">Column index.</param>
      <returns>The hyperlink object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.SetColumnHeaderHyperlink(System.Int32,Aspose.Cells.GridWeb.Data.Hyperlink)">
      <summary>
            Sets the hyperlink object for the column header.
            </summary>
      <param name="colIndex">Column index.</param>
      <param name="hlink">The hyperlink object.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.GroupRows(System.Int32,System.Int32)">
      <summary>
            Groups rows.
            </summary>
      <param name="firstIndex">The first row index to be grouped.</param>
      <param name="lastIndex">The last row index to be grouped.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.GroupRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Groups rows.
            </summary>
      <param name="firstIndex">The first row index to be grouped.</param>
      <param name="lastIndex">The last row index to be grouped.</param>
      <param name="isHidden">Specifies if the grouped rows are hidden.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.UngroupRows(System.Int32,System.Int32)">
      <summary>
            Ungroups rows.
            </summary>
      <param name="firstIndex">The first row index to be ungrouped.</param>
      <param name="lastIndex">The last row index to be ungrouped.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.ExpandGroupedRows(System.Int32)">
      <summary>
            Expands the grouped rows.
            </summary>
      <param name="rowIndex">The first row index.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.CollapseGroupedRows(System.Int32)">
      <summary>
            Collapses the grouped rows.
            </summary>
      <param name="rowIndex">The first row index.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.CreateSubtotal(System.Int32,System.Int32,System.Int32,Aspose.Cells.GridWeb.Data.SubtotalFunction,System.Int32[],System.String,Aspose.Cells.GridWeb.TableItemStyle,Aspose.Cells.GridWeb.TableItemStyle,Aspose.Cells.GridWeb.Data.NumberType,System.String)">
      <summary>
            Creates subtotal in the sheet.
            </summary>
      <param name="columnNameRowIndex">The row index of the column name row.</param>
      <param name="dataRows">The number of the data rows.</param>
      <param name="groupByColumnIndex">The column index of the column to be grouped.</param>
      <param name="subtotalFunction">The subtotal function type.</param>
      <param name="subtotalColumnIndexList">The column indexes to be subtotaled.</param>
      <param name="functionLabel">The label of subtotal function.</param>
      <param name="grandCellStyle">The style of the grand total line.</param>
      <param name="subtotalCellStyle">The style of the subtotal line.</param>
      <param name="numberType">The number type of the subtotal result cells.</param>
      <param name="customString">The custome format string of the subtotal result cells. Can be null.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.CreateSubtotal(System.Int32,System.Int32,System.Int32,Aspose.Cells.GridWeb.Data.SubtotalFunction,System.Int32[])">
      <summary>
            Creates subtotal in the sheet.
            </summary>
      <param name="columnNameRowIndex">The row index of the column name row.</param>
      <param name="dataRows">The number of the data rows.</param>
      <param name="groupByColumnIndex">The column index of the column to be grouped.</param>
      <param name="subtotalFunction">The subtotal function type.</param>
      <param name="subtotalColumnIndexList">The column indexes to be subtotaled.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.RemoveSubtotal">
      <summary>
            Removes subtotal created by the CreateSubtotal method in the sheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.GetRowHeaderToolTip(System.Int32)">
      <summary>
            Gets the rowheader's tooltip text.
            </summary>
      <param name="rowIndex">The row's index.</param>
      <returns>The tooltip text.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.SetRowHeaderToolTip(System.Int32,System.String)">
      <summary>
            Sets the rowheader's tooltip text.
            </summary>
      <param name="rowIndex">The row's index.</param>
      <param name="toolTip">The tooltip text.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.GetColumnHeaderToolTip(System.Int32)">
      <summary>
            Gets the columnheader's tooltip text.
            </summary>
      <param name="colIndex">The column's index.</param>
      <returns>The tooltip text.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.SetColumnHeaderToolTip(System.Int32,System.String)">
      <summary>
            Sets the columnheader's tooltip text.
            </summary>
      <param name="colIndex">The column's index.</param>
      <param name="toolTip">The tooltip text.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.DataSourceControlUpdate(System.Web.UI.WebControls.SqlDataSource)">
      <summary>
            This method is only available in .NET 2.0 version. <br />
            When the worksheet's datasource is a SqlDataSource object, you may use this method to update the binding datasource(SQLServer, Oracle, Access, etc.) with the SqlDataSource object.
            </summary>
      <param name="dataSource">The SqlDataSource object.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Internal used only.
            </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.AutoFitColumn(System.Int32,System.Int32,System.Int32)">
      <summary>
            Autofits the column width. This method autofits a column
            based on content in a range of cells within the column
            from startRow to endRow. AutoFitColumn is an imprecise function.
            </summary>
      <param name="columnIndex">column index, zero based</param>
      <param name="startRow">start row index, zero based</param>
      <param name="endRow">end row index, zero based</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.AutoFitColumn(System.Int32)">
      <summary>
            Autofits the column width. This method autofits a column
            based on content in a range of cells within the column.
            AutoFitColumn is an imprecise function.
            </summary>
      <param name="columnIndex">column index,zero based</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.AutoFitColumns(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Autofits columns width in a rectangle range.
            AutoFitColumns is an imprecise function.
            </summary>
      <param name="startRow">start row index, zero based</param>
      <param name="startColumn">column index, zero based</param>
      <param name="endRow">end row index, zero based</param>
      <param name="endColumn">column index, zero based</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.AutoFitColumns(System.Int32,System.Int32)">
      <summary>
            Autofits columns width from startColumn to endColumn.
            AutoFitColumns is an imprecise function.
            </summary>
      <param name="startColumn">start column index, zero based</param>
      <param name="endColumn">end column index, zero based</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.AutoFitColumns">
      <summary>
            Autofits all columns width in this WebWorksheet.
            AutoFitColumns is an imprecise function.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.AutoFitRow(System.Int32,System.Int32,System.Int32)">
      <summary>
            Autofits the row height. This method autofits a row
            based on content in a range of cells within the row
            from startColumn to endColumn. AutoFitRow is an imprecise function.
            </summary>
      <param name="rowIndex">row index, zero based</param>
      <param name="startColumn">start column index, zero based</param>
      <param name="endColumn">end column index, zero based</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.AutoFitRow(System.Int32)">
      <summary>
            Autofits the row height. This method autofits a row
            based on content in a range of cells within the row.
            AutoFitRow is an imprecise function.
            </summary>
      <param name="rowIndex">row index, zero based</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.AutoFitRows(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Autofits rows height in a rectangle range.
            AutoFitRows is an imprecise function.
            </summary>
      <param name="startRow">start row index, zero based</param>
      <param name="startColumn">column index, zero based</param>
      <param name="endRow">end row index, zero based</param>
      <param name="endColumn">column index, zero based</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.AutoFitRows(System.Int32,System.Int32)">
      <summary>
            Autofits rows height from startRow to endRow.
            AutoFitRows is an imprecise function.
            </summary>
      <param name="startRow">start row index, zero based</param>
      <param name="endRow">end row index, zero based</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheet.AutoFitRows">
      <summary>
            Autofits all rows height in this WebWorksheet.
            AutoFitRows is an imprecise function.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.IsSummaryRowBelow">
      <summary>
            Indicates if the summary row will be positioned below the detail rows in the outline. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.RowFilter">
      <summary>
            Gets the RowFilterSettings object of the sheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.Cells">
      <summary>
            Gets the <see cref="T:Aspose.Cells.GridWeb.Data.WebCells" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.Index">
      <summary>
            Gets the index of itself within the <see cref="T:Aspose.Cells.GridWeb.Data.WebWorksheets" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.Name">
      <summary>
            Gets or sets the name of the sheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.Comments">
      <summary>
            Gets the comment collection object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.Hyperlinks">
      <summary>
            Gets the Hyperlink collection object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.CellImages">
      <summary>
            Gets the CellImage and Hyperlink collection object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.Pictures">
      <summary>
            Gets the Picture collection object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.FreezePaneInfo">
      <summary>
            Gets the freeze pane information.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.IsProtected">
      <summary>
            Gets or sets whether the worksheet is protected. When a worksheet is protected, all the cells can not
            be edit except the cell whose IsLocked property is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.DataSource">
      <summary>
            Gets or sets the DataSource.
            Generally it's a DataSet object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.DataMember">
      <summary>
            Gets or sets the DataMember from the multi-member DataSource.
            Generally it represents a DataTable object of a DataSet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.EnableRowAddDelete">
      <summary>
            In data-binding mode, indicates whether to enable user add/delete row from client-side.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.EnableExpandChildView">
      <summary>
            In data-binding mode, indicates whether to enable user to expand rows that have child views.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.BindColumns">
      <summary>
            Bind columns collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.EnableCreateBindColumnHeader">
      <summary>
            In data-binding mode, indicates whether to create bind column header captions in the sheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.BindStartRow">
      <summary>
            In data-binding mode, BindStartRow and BindStartColumn indicate the position of the grid to bind bo the datasource.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.BindStartColumn">
      <summary>
            In data-binding mode, BindStartRow and BindStartColumn indicate the position of the grid to bind bo the datasource.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.CurrentBindRows">
      <summary>
            Gets the binding rows number in data-binding mode.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.BindingSource">
      <summary>
            The actually binding datasource object at run-time. It is a DataView object when the DataSource property is a DataSet, DataTable or DataView object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.Visible">
      <summary>
            Indicates whether this sheet's name is shown in the sheet tabs of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.ExcelShowDefaultGridLines">
      <summary>
            Indicates whether to show the default grid lines when export to an Excel file and view in MS-EXCEL.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheet.ExcelShowHeaders">
      <summary>
            Indicates whether to show the row and column headers when export to an Excel file and view in MS-EXCEL.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.FileFormatType">
      <summary>
            Enumerates supported file format types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.CSV">
      <summary>
            CSV
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.Excel2003">
      <summary>
            Excel 2003, Excel97-2003 xls file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.Excel2007">
      <summary>
            Excel 2007 Represents an xlsx file
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.XLSM">
      <summary>
            Excel 2007 xlsm file which enable macros
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.XLTX">
      <summary>
            Excel Template file
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.XLTM">
      <summary>
            Represents an Xltx file which enable macros. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.TABDELIMITED">
      <summary>
            Represents a tab delimited text file,txt file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.HTML">
      <summary>
            Represents a html file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.PDF">
      <summary>
            Represents a pdf file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.ODS">
      <summary>
            Represents a ods file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.SpreadsheetML">
      <summary>
            SpreadsheetML,Represents an Excel 2003 xml file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.XLSB">
      <summary>
            Represents a XLSB file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.MHTML">
      <summary>
            Represents a mhtml file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.XPS">
      <summary>
            Represents a XPS file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.TIFF">
      <summary>
            Represents a TIFF file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.SVG">
      <summary>
            Represents a SVG file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.FileFormatType.DIF">
      <summary>
            Data Interchange Format.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.WebWorksheets">
      <summary>
             Represents a collection of <see cref="T:Aspose.Cells.GridWeb.Data.WebWorksheet" />.
             </summary>
      <example>
        <code>
             
             [C#]
             ...
             using System.Web.UI.WebControls;
             ...
             ...
             
             WebWorksheets Worksheets = GridWeb1.WebWorksheets;
            	WebCells cells = Worksheets[0].Cells;
            	
            	//Sets default row height
            	cells.StandardHeight = new Unit(16, UnitType.Point);
            	//Sets row height
            	cells.SetRowHeight(2, new Unit(20, UnitType.Point));
            	
            	//Sets default colum width
            	cells.StandardWidth = new Unit(50, UnitType.Point);
            	//Sets column width
            	cells.SetColumnWidth(3, new Unit(80, UnitType.Point));
            	
            	//Merge cells
            	cells.Merge(5, 4, 2, 2);
            	
            	//Import data
            	DataSet1 ds1 = new DataSet1();
            
            	for (int i =0; i&lt;16; i++)
            	{
            		DataSet1.Table1Row row = ds1.Table1.NewTable1Row();
            		row["c1"] = "hello1";
            		row["c2"] = i;
            		row["c3"] = "data";
            		ds1.Table1.AddTable1Row(row);
            	}
            
            	GridWeb1.WebWorksheets.ImportDataView(ds1.Table1.DefaultView, null, null);
             
             //Import from excel file
             Worksheets.ImportExcelFile("c:\\file1.xls");
             
             [Visual Basic]
            	Imports System.Web.UI.WebControls
            	...
            	...
            	 
            	Dim Worksheets As WebWorksheets =  GridWeb1.WebWorksheets 
            	Dim cells As WebCells =  Worksheets(0).Cells 
            	 
            	'Sets default row height
            	cells.StandardHeight = New Unit(16, UnitType.Point)
            	'Sets row height
            	cells.SetRowHeight(2,New Unit(20,UnitType.Point))
            	 
            	'Sets default colum width
            	cells.StandardWidth = New Unit(50, UnitType.Point)
            	'Sets column width
            	cells.SetColumnWidth(3,New Unit(80,UnitType.Point))
            	 
            	'Merge cells
            	cells.Merge(5, 4, 2, 2)
            	 
            	'Import data
            	Dim ds1 As DataSet1 =  New DataSet1() 
            	 
            	Dim i As Integer
            	For  i = 0 To 15
            		Dim row As DataSet1.Table1Row =  ds1.Table1.NewTable1Row() 
            		row("c1") = "hello1"
            		row("c2") = i
            		row("c3") = "data"
            		ds1.Table1.AddTable1Row(row)
            	Next
            	 
            	GridWeb1.WebWorksheets.ImportDataView(ds1.Table1.DefaultView, Nothing, Nothing)
            	 
            	'Import from excel file
            	Worksheets.ImportExcelFile("c:\\file1.xls")
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.Add">
      <summary>
            Adds a new <see cref="T:Aspose.Cells.GridWeb.Data.WebWorksheet" />.
            </summary>
      <returns>The index of the added WebWorksheet.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.Add(System.String)">
      <summary>
            Adds a new <see cref="T:Aspose.Cells.GridWeb.Data.WebWorksheet" />.
            </summary>
      <param name="sheetName">the name of the new WebWorksheet.</param>
      <returns>The index of the added WebWorksheet.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.AddCopy(System.Int32)">
      <summary>
            Adds a worksheet to the collection and copys data from an existed worksheet.
            </summary>
      <param name="sheetIndex">Index of source worksheet.</param>
      <returns>
        <see cref="T:Aspose.Cells.GridWeb.Data.WebWorksheet" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.AddCopy(System.String)">
      <summary>
            Adds a worksheet to the collection and copys data from an existed worksheet.
            </summary>
      <param name="sheetName">Name of source worksheet.</param>
      <returns>
        <see cref="T:Aspose.Cells.GridWeb.Data.WebWorksheet" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.AddCopy(Aspose.Cells.GridWeb.Data.WebWorksheet)">
      <summary>
            Adds a worksheet to the collection and copys data from an existed worksheet.
            </summary>
      <param name="srcSheet">Source of WebWorksheet.</param>
      <returns>
        <see cref="T:Aspose.Cells.GridWeb.Data.WebWorksheet" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.RemoveAt(System.String)">
      <summary>
            Removes the element at a specified name.
            </summary>
      <param name="sheetName">The name of the element to remove.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.ImportExcelFile(System.String)">
      <summary>
            Imports from an excel file.
            </summary>
      <param name="fileName">The excel file's name.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.ImportExcelFile(System.IO.Stream)">
      <summary>
            Imports from an excel file stream, including disk file stream or memory stream.
            </summary>
      <param name="stream">The excel file's stream, including disk file stream or memory stream.</param>
      <example>
        <code>
            
            [C#]
            private void Page_Load(object sender, System.EventArgs e)
            {
            	if (!IsPostBack)
            	{
            		// Opens a new file stream.
            		FileStream fs = new FileStream("d:\\bookx.xls", FileMode.Open);
            		try
            		{
            			// Imports data from this stream.
            			GridWeb1.WebWorksheets.ImportExcelFile(fs);
            			GridWeb1.RefreshControl();
            			
            			// Writes data to a memory stream.
            			MemoryStream mstream = new MemoryStream();
            			GridWeb1.WebWorksheets.SaveToExcelFile(mstream);
            			mstream.Flush();
            
            			// Writes the content of the memory stream to a file.
            			FileStream fout = new FileStream("d:\\out.xls", FileMode.Create);
            			fout.Write(mstream.GetBuffer(), 0, (int)mstream.Length);
            			fout.Close();
            		}
            		catch (Exception ex)
            		{
            			throw ex;
            		}
            		finally
            		{
            			fs.Close();
            		}
            	}
            }
            
            [Visual Basic]
            Private  Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)
            	If Not IsPostBack Then
            		' Opens a new file stream.
            		Dim fs As FileStream =  New FileStream("d:\\bookx.xls",FileMode.Open) 
            		Try
            			' Imports data from this stream.
            			GridWeb1.WebWorksheets.ImportExcelFile(fs)
            			GridWeb1.RefreshControl()
             
            			' Writes data to a memory stream.
            			Dim mstream As MemoryStream =  New MemoryStream() 
            			GridWeb1.WebWorksheets.SaveToExcelFile(mstream)
            			mstream.Flush()
             
            			' Writes the content of the memory stream to a file.
            			Dim fout As FileStream =  New FileStream("d:\\out.xls",FileMode.Create) 
            			f.Write(mstream.GetBuffer(), 0, CType(mstream.Length, Integer))
            			f.Close()
            		Catch ex As Exception
            			Throw ex
            		Finally
            			fs.Close()
            		End Try
            	End If
            End Sub
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.LoadCSVFile(System.String)">
      <summary>
            Loads data from a CSV file.
            </summary>
      <param name="fileName">The file's name.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.LoadCSVFile(System.IO.Stream)">
      <summary>
            Loads data from a CSV file stream.
            </summary>
      <param name="stream">The file stream.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.LoadHTMLFile(System.String)">
      <summary>
            Loads data from a HTML file.
            </summary>
      <param name="fileName">The file's name.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.LoadHTMLFile(System.IO.Stream)">
      <summary>
            Loads data from a HTML file stream.
            </summary>
      <param name="stream">The file stream.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.LoadSpreadSheetMLFile(System.String)">
      <summary>
            Loads data from a SpreadSheetML file.
            </summary>
      <param name="fileName">The file's name.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.LoadSpreadSheetMLFile(System.IO.Stream)">
      <summary>
            Loads data from a SpreadSheetML file stream.
            </summary>
      <param name="stream">The file's stream.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.ImportDataView(System.Data.DataView,Aspose.Cells.GridWeb.TableItemStyle,Aspose.Cells.GridWeb.TableItemStyle)">
      <summary>
            Imports from a DataView. Creates a sheet with the DataView's table name automatically.
            </summary>
      <param name="dataView">The DataView object.</param>
      <param name="colHeaderStyle">Specifies the style of the dataview header bar.</param>
      <param name="dataStyle">Specifies the style of the data area.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.ImportDataView(System.Data.DataView,Aspose.Cells.GridWeb.TableItemStyle,Aspose.Cells.GridWeb.TableItemStyle,System.String,System.Int32,System.Int32)">
      <summary>
            Imports from a DataView to the specified sheet and position.
            
            </summary>
      <param name="dataView">The DataView object.</param>
      <param name="colHeaderStyle">Specifies the style of the dataview header bar.</param>
      <param name="dataStyle">Specifies the style of the data area.</param>
      <param name="sheetName">Specifies the sheet name. If the sheet doesn't exist, it will be created for you.</param>
      <param name="row">Specifies the import position.</param>
      <param name="column">Specifies the import postion.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.SaveDataToExcelFile(System.String,System.String)">
      <summary>
            Saves data only to a excel file with a predefined excel template file, without saving styles.
            </summary>
      <param name="targetFile">The name of the target file to write to.</param>
      <param name="templateFile">The template excel file name.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.SaveToExcelFile(System.String)">
      <summary>
            Saves the worksheets to an excel file with Excel 2003 format.
            </summary>
      <param name="targetFile">The name of the target file to write to.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.SaveToExcelFile(System.String,Aspose.Cells.GridWeb.Data.FileFormatType)">
      <summary>
            Saves the worksheets to an excel file.
            </summary>
      <param name="targetFile">The name of the target file to write to.</param>
      <param name="format">The file format(Excel2003, Excel2007, CSV, SpreadsheetML)</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.SaveToExcelFile(System.IO.Stream)">
      <summary>
            Saves the worksheets to a excel file stream, including disk IO stream or memory stream.
            </summary>
      <param name="stream">The target file stream to write to.</param>
      <example>
        <code>
            
            [C#]
            private void Page_Load(object sender, System.EventArgs e)
            {
            	if (!IsPostBack)
            	{
            		// Opens a new file stream.
            		FileStream fs = new FileStream("d:\\bookx.xls", FileMode.Open);
            		try
            		{
            			// Imports data from this stream.
            			GridWeb1.WebWorksheets.ImportExcelFile(fs);
            			GridWeb1.RefreshControl();
            			
            			// Writes data to a memory stream.
            			MemoryStream mstream = new MemoryStream();
            			GridWeb1.WebWorksheets.SaveToExcelFile(mstream);
            			mstream.Flush();
            
            			// Writes the content of the memory stream to a file.
            			FileStream fout = new FileStream("d:\\out.xls", FileMode.Create);
            			fout.Write(mstream.GetBuffer(), 0, (int)mstream.Length);
            			fout.Close();
            		}
            		catch (Exception ex)
            		{
            			throw ex;
            		}
            		finally
            		{
            			fs.Close();
            		}
            	}
            }
            
            [Visual Basic]
            Private  Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)
            	If Not IsPostBack Then
            		' Opens a new file stream.
            		Dim fs As FileStream =  New FileStream("d:\\bookx.xls",FileMode.Open) 
            		Try
            			' Imports data from this stream.
            			GridWeb1.WebWorksheets.ImportExcelFile(fs)
            			GridWeb1.RefreshControl()
             
            			' Writes data to a memory stream.
            			Dim mstream As MemoryStream =  New MemoryStream() 
            			GridWeb1.WebWorksheets.SaveToExcelFile(mstream)
            			mstream.Flush()
             
            			' Writes the content of the memory stream to a file.
            			Dim fout As FileStream =  New FileStream("d:\\out.xls",FileMode.Create) 
            			f.Write(mstream.GetBuffer(), 0, CType(mstream.Length, Integer))
            			f.Close()
            		Catch ex As Exception
            			Throw ex
            		Finally
            			fs.Close()
            		End Try
            	End If
            End Sub
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.SaveToExcelFile(System.IO.Stream,Aspose.Cells.GridWeb.Data.FileFormatType)">
      <summary>
            Saves the worksheets to an excel file.
            </summary>
      <param name="stream">The stream to write to.</param>
      <param name="format">The file format(Excel2003, Excel2007, CSV, SpreadsheetML)</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.SaveCSVFile(System.String)">
      <summary>
            Saves data to a CSV file.
            </summary>
      <param name="targetFile">The file's name.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.SaveCSVFile(System.IO.Stream)">
      <summary>
            Saves data to a CSV file stream.
            </summary>
      <param name="stream">The file stream.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.SaveHTMLFile(System.String)">
      <summary>
            Saves data to a HTML file.
            </summary>
      <param name="targetFile">The file's name.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.SaveHTMLFile(System.IO.Stream)">
      <summary>
            Saves data to a HTML file stream.
            </summary>
      <param name="stream">The file stream.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.SaveSpreadSheetMLFile(System.String)">
      <summary>
            Saves data to a SpreadSheetML file.
            </summary>
      <param name="targetFile">The file's name.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.SaveSpreadSheetMLFile(System.IO.Stream)">
      <summary>
            Saves data to a SpreadSheetML file stream.
            </summary>
      <param name="stream">The file stream.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.RunAllFormulas">
      <summary>
            Runs all the cells's formula.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.RegisterCustomFunctionHandler(System.String,Aspose.Cells.GridWeb.Data.CustomFunctionHandler)">
      <summary>
            Register a custom function handler used in the formulas.
            </summary>
      <param name="fname">The custom function's name.</param>
      <param name="handler">The custom function's handler.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.UnregisterCustomFunctionHandler(System.String)">
      <summary>
            Unregister a custom function.
            </summary>
      <param name="fname">The custom function's name.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.ClearCustomFunctionHandlers">
      <summary>
            Clear all the custom functions.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.CopyTo(System.Array,System.Int32)">
      <summary>
            Copys contents to an array.
            </summary>
      <param name="array">An array.</param>
      <param name="index">Index of the array.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.GetEnumerator">
      <summary>
            Gets a enumerator.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.RemoveAt(System.Int32)">
      <summary>
            Removes a sheet at the index.
            </summary>
      <param name="index">The sheet index.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.Insert(System.Int32,System.Object)">
      <summary>
            Inserts a sheet to the index.
            </summary>
      <param name="index">The index.</param>
      <param name="value">the sheet.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.Remove(System.Object)">
      <summary>
            Removes a sheet.
            </summary>
      <param name="value">The sheet.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.Contains(System.Object)">
      <summary>
            Indicates whether the collection contains the sheet.
            </summary>
      <param name="value">The sheet.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.Clear">
      <summary>
            Clears all sheets.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.IndexOf(System.Object)">
      <summary>
            Gets the index of the sheet.
            </summary>
      <param name="value">The sheet.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.WebWorksheets.Add(System.Object)">
      <summary>
            Adds a sheet object.
            </summary>
      <param name="value">The sheet.</param>
      <returns>
      </returns>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.WebWorksheets.AutoFitRows">
      <summary>
            Auto Fit Rows
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.ActiveSheet">
      <summary>
            Gets the active sheet object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.ActiveSheetIndex">
      <summary>
            Specifies the index of the active sheet which should be displayed in the GridWeb control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.EnableIterativeCalculation">
      <summary>
            Indicates whether enable iterative calculation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.MaximumIterations">
      <summary>
            Gets or sets the maximum iterations.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.Names">
      <summary>
            Gets the collection of all the Name objects in the spreadsheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.Item(System.Object)">
      <summary>
            Gets a worksheet object from the collection by a integer index or a sheet name string.
            The index could be a integer or a string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.DefaultFontName">
      <summary>
            Gets or sets the websheet's default font name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.DefaultSpaceWidth">
      <summary>
            Gets the websheet's default space
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.DefaultFontSize">
      <summary>
            Gets or sets the websheet's default font size.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.PivotTables">
      <summary>
            Gets the pivotTable collection object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.PivotCaches">
      <summary>
            Gets the PivotCache collection object
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.IsSynchronized">
      <summary>
            Gets a value indicating if access to the ICollection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.Count">
      <summary>
            Gets the sheets count.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.SyncRoot">
      <summary>
            Gets an object that can be used to synchronize access to the ICollection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.IsReadOnly">
      <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.WebWorksheets.IsFixedSize">
      <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Design.DesignCmd">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignCmd.init">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignCmd.style">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignCmd.clear">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignCmd.openexcel">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignCmd.openacw">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignCmd.saveexcel">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignCmd.saveacw">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignCmd.options">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignCmd.addsheet">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignCmd.addsheetcopy">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignCmd.removesheet">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignCmd.renamesheet">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignCmd.addhyperlink">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignCmd.removehyperlink">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Design.DesignParameters">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.cmd">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.presetStyle">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.customString">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.fileName">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.sheetName">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.EditMode">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.ForceValid">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.EnableDoubleClickEvent">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.ShowDefaultGridLine">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.ShowSubmitButton">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.ShowSaveButton">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.ShowUndoButton">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.EnablePaging">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.ShowHeaderBar">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.ShowTabBar">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.EnableStyleDialogbox">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.EnableClientFreeze">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.EnableClientRowOperations">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.EnableClientColumnOperations">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.EnableClientMergeOperations">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.MinColumn">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.MaxColumn">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.MinRow">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.MaxRow">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.PageSize">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.ActionType">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.CellCommand">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.ImageUrl">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.Target">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.Text">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.ToolTip">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.Url">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Design.DesignParameters.showMessage(System.String)">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Design.DesignParameters.clearCmd">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Design.DesignParameters.sendBackStyle(Aspose.Cells.GridWeb.PresetStyle,System.String)">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Design.DesignParameters.sendBackOptions(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Design.DesignParameters.changeActiveSheetIndex(System.Int32)">
      <summary>
            Internal used only.
            </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Design.DesignParameters.loadNewSheets(System.String[])">
      <summary>
            Internal used only.
            </summary>
      <param name="sheetNames">
      </param>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.ActiveSheetIndex">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Design.DesignParameters.SheetNames">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.Design.DesignParameters.StyleChanged">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.Design.DesignParameters.OptionsChanged">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.Design.DesignParameters.ActiveSheetIndexChanged">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.Design.DesignParameters.NewSheetsLoaded">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.CustomCommandEventHandler">
      <summary>
            Represents the method that intend to handle Custom Command events.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.WorkbookEventHandler">
      <summary>
            Represents the method that intend to handle workbook events.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event argument.</param>
    </member>
    <member name="T:Aspose.Cells.GridWeb.RowColumnEventHandler">
      <summary>
            Represents the method that intend to handle row/column events.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event argument. Call e.RejectDelete() if you want to cancel the deleting operation in RowDeleting or ColumnDeleting event handlers.</param>
    </member>
    <member name="T:Aspose.Cells.GridWeb.CellEventHandler">
      <summary>
            Represents the method that intend to handle cell events. If the event if fired by a child grid's cell in hierarchical displaying mode, the sender parameter represents the child grid object.
            </summary>
      <param name="sender">The source grid of the event. If the event if fired by a child grid's cell in hierarchical displaying mode, the sender parameter represents the child grid object.</param>
      <param name="e">The event argument. The e.Cell is the cell who fires the event. The e.Argument contains the argument of the event.</param>
    </member>
    <member name="T:Aspose.Cells.GridWeb.CellEventStringHandler">
      <summary>
            Represents the method that intend to handle cell events. If the event if fired by a child grid's cell in hierarchical displaying mode, the sender parameter represents the child grid object.
            </summary>
      <param name="sender">The source grid of the event. If the event if fired by a child grid's cell in hierarchical displaying mode, the sender parameter represents the child grid object.</param>
      <param name="e">The event argument. The e.Cell is the cell who fires the event. The e.Argument contains the argument of the event.</param>
    </member>
    <member name="T:Aspose.Cells.GridWeb.CellErrorHandler">
      <summary>
            Represents the method that intend to handle cell error events.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.BindingChildViewHandler">
      <summary>
            Represents the method that intend to handle BindingChildView events.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.PresetStyle">
      <summary>
            Represents the preset style or an GridWeb control.
            By far, we provide 7 preset styles.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.PresetStyle.Standard">
      <summary>
            Standard style, silver
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.PresetStyle.Colorful1">
      <summary>
            Rose
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.PresetStyle.Colorful2">
      <summary>
            Blue
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.PresetStyle.Professional1">
      <summary>
            Cyan
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.PresetStyle.Professional2">
      <summary>
            Cyan again
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.PresetStyle.Traditional1">
      <summary>
            Dark
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.PresetStyle.Traditional2">
      <summary>
            Gray
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.PresetStyle.Custom">
      <summary>
            Use your customized style
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.SessionMode">
      <summary>
            Represents the session mode of the grid.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.SessionMode.Session">
      <summary>
            Uses the system session to store/recover the grid's sheet data automatically.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.SessionMode.ViewState">
      <summary>
            Uses the page's viewstate to store/recover the grid's sheet data automatically.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.SessionMode.Custom">
      <summary>
            Uses the LoadCustomData event to load the grid's sheet data manually. And uses the
            SheetDataUpdated event to save the grid's sheet data.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.GridWeb">
      <summary>
            Represents a root object to create an GridWeb control.
            Inherited from System.Web.UI.WebControls.WebControl.
            To use this control, simply drag it from your toolbox to a webform.
            </summary>
      <remarks>
            Please refer to .NET SDK document about further information about System.Web.UI.WebControls.WebControl.
            </remarks>
      <example>
        <code>
            ...in your webform's code:
            [C#]
            private void Page_Load(object sender, System.EventArgs e)
            {
            	// Import from a excel file
            	GridWeb1.WebWorksheets.ImportExcelFile(txtFile.Text);
            	GridWeb1.RefreshControl();
            }
            
            [Visual Basic]
            Private  Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)
            	' Import from a excel file
            	GridWeb1.WebWorksheets.ImportExcelFile(txtFile.Text)
            	GridWeb1.RefreshControl()
            End Sub
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWeb.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWeb.SaveCustomStyleFile(System.String)">
      <summary>
            Saves current style data of the control to an xml file.
            Can be used to create your customized style file.
            </summary>
      <param name="fileName">The style file's name.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWeb.SaveACW2File(System.String)">
      <summary>
            Saves the control's data(style, appearance, behavior and sheet data) to a ACW2 format file.
            </summary>
      <param name="fileName">The file name.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWeb.LoadACW2File(System.String)">
      <summary>
            Loads the control's data(style, appearance, behavior and sheet data) from a ACW2 format file.
            </summary>
      <param name="fileName">The file name.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWeb.SaveToStream(System.IO.Stream)">
      <summary>
            Saves the control's data(style, appearance, behavior and sheet data) to a stream.
            </summary>
      <param name="stream">The stream object.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWeb.LoadFromStream(System.IO.Stream)">
      <summary>
            Loads the control's data(style, appearance, behavior and sheet data) from a stream.
            </summary>
      <param name="stream">The stream object</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWeb.DataBind">
      <summary>
            Bind the control and all its child contorls to the its datasource.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWeb.Dispose">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWeb.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
      <summary>
            Internal used only.
            </summary>
      <param name="writer">
      </param>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.OnSubmitClientFunction">
      <summary>
            Gets or sets the client function to be called before the control is submitted at client side.
            The client function should be declared like this:<br />
            function MyOnSubmit(arg, cancelEdit)<br />
            {<br />	return true;<br />}<br />
            The arg is the submit argument, contains the command to be post to the server.
            The cancelEdit is boolean value indicates whether the control has discarded the user input before submit.
            The control will continue submitting if the function returns true.
            <br />Note: You may use the "this" pointer in the client function to point the grid control which fires the event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.OnPageSubmitClientFunction">
      <summary>
            Gets or sets the client function to be called before the page is submitted at client side.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.OnValidationErrorClientFunction">
      <summary>
            Gets or sets the client function to be called when the client-side validation is failed.
            The client function should be declared like this:<br />
            function MyOnValidationError()<br />
            {<br />}<br />
            You may display an alert message in this function to indicate that there are errors.
            <br />Note: You may use the "this" pointer in the client function to point the grid control which fires the event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.OnCellSelectedClientFunction">
      <summary>
            Gets or sets the client side function to be called when a cell is selected.
            The client function should be declared like this:<br />
            function MyOnSelectCell(cell)<br />
            {<br />
            	GridWeb1.setCellValueByCell(cell, "test");<br />
            }<br /><br />Note: You may use the "this" pointer in the client function to point the grid control which fires the event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.OnCellSelectedAjaxCallBackClientFunction">
      <summary>
            Gets or sets the client side function to be called when a cell is selected.
            The client function should be declared like this:<br />
            function MyOnSelectCellAjaxCallBack(cell,customerdata)<br />
            {<br /><br />
            }<br /><br />Note: You may use the "this" pointer in the client function to point the grid control which fires the event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.OnShapeSelectedClientFunction">
      <summary>
            Gets or sets the client side function to be called when a shape is selected.
            The client function should be declared like this:<br />
            function MyOnSelectShape(shape)<br />
            {<br />
            	var name=shape.getAttribute("namevalue")<br />
            	var text=shape.getAttribute("textvalue")<br />
            	var value=shape.getAttribute("controlvalue")<br />
            	var type=shape.getAttribute("msotype")<br />
            }<br /><br />Note: You may use the "this" pointer in the client function to point the grid control which fires the event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.OnCellUnselectedClientFunction">
      <summary>
            Gets or sets the client side function to be called when a cell is unselected.
            The client function should be declared like this:<br />
            function MyOnUnselectCell(cell)<br />
            {<br />
            	GridWeb1.setCellValueByCell(cell, "test");<br />
            }<br /><br />Note: You may use the "this" pointer in the client function to point the grid control which fires the event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.OnDoubleClickCellClientFunction">
      <summary>
            Gets or sets the client side function to be called when a cell is double clicked.
            The client function should be declared like this:<br />
            function MyOnDoubleClickCell(cell)<br />
            {<br />
            	GridWeb1.setCellValueByCell(cell, "test");<br />
            }<br /><br />Note: You may use the "this" pointer in the client function to point the grid control which fires the event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.OnCellErrorClientFunction">
      <summary>
            Gets or sets the client side function name to be called when a cell's validation is failed.
            The client function should be declared like this:<br />
            function MyOnCellError(cell)<br />
            {<br />
            	alert(GridWeb1.getCellValueByCell(cell));<br />
            }<br /><br />Note: You may use the "this" pointer in the client function to point the grid control which fires the event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.OnCellUpdatedClientFunction">
      <summary>
            Gets or sets the client side function name to be called when a cell's value is updated.
            The client function should be declared like this:<br />
            function MyOnCellUpdated(cell)<br />
            {<br />
            	alert(GridWeb1.getCellValueByCell(cell));<br />
            }<br /><br />Note: You may use the "this" pointer in the client function to point the grid control which fires the event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.OnGridInitClientFunction">
      <summary>
            Gets or sets the client side function name to be called when the grid is initialized.
            The client function should be declared like this:<br />
            function MyOnGridInit(grid)<br />
            {<br />
            	alert("The grid is initialized: " + grid.id);<br />
            }<br /><br />Note: You may use the "this" pointer in the client function to point the grid control which fires the event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.OnDoubleClickRowClientFunction">
      <summary>
            Gets or sets the client side function to be called when a row is double clicked.
            The client function should be declared like this:<br />
            function MyOnRowDoubleClick(row)<br />
            {<br />
            	alert(row);<br />
            }<br /><br />Note: You may use the "this" pointer in the client function to point the grid control which fires the event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.OnContextMenuShowClientFunction">
      <summary>
            Gets or sets the client side function to be called when the context menu will be shown.
            The client function should be declared like this:<br />
            function onContextMenuShow()<br />
            {<br />
            	var menu = event.srcElement;<br />
                menu.setItemVisibility("Delete", "block");<br />
                menu.setItemVisibility("Update", "none");<br />
            }<br /><br />Note: You may use the "this" pointer in the client function to point the grid control which fires the event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ViewPanelScrollLeft">
      <summary>
            Gets or sets the position of the scroll bar of the grid's view panel.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ViewPanelScrollTop">
      <summary>
            Gets or sets the position of the scroll bar of the grid's view panel.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ActiveCellBgColor">
      <summary>
            Specifies the background color of the active cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.SelectCellBgColor">
      <summary>
            Specifies the background color of the selected cells in multi-select range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ActiveHeaderBgColor">
      <summary>
            Specifies the background color of the active row/column header.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ActiveCellColor">
      <summary>
            Specifies the color of the active cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.SelectCellColor">
      <summary>
            Specifies the color of the selected cells in multi-select range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ActiveHeaderColor">
      <summary>
            Specifies the color of the active row/column header.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ACWClientPath">
      <summary>
            Gets or sets the web path of the script/image files of the control. For example: "http://localhost/acw_client".
            You may also set this value in the web.config file. Add this section to the &lt;configuration&gt; section:
            <br>&lt;appSettings&gt;</br><br>&lt;add key="aspose.cells.gridweb.acw_client_path" value="/acw_client/" /&gt;</br><br>&lt;/appSettings&gt;</br></summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ACWLanguageFileUrl">
      <summary>
            Gets or sets the web url of the language file of the control. For example: "/acw_client/lang_en.js".
            <br>By default, a built-in english file is used.</br></summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.CurrentPageIndex">
      <summary>
            Gets or sets the current page index in paging mode.
            </summary>
      <remarks>
            When in paging mode, the control will display PageSize rows of data once,
            and display the page select control in the tab bar.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ActiveCell">
      <summary>
            Gets or sets the active cell of the current sheet.
            Changed to be writable since version 1.9.0.1.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.SelectCells">
      <summary>
            Gets the select cells collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ModifiedCells">
      <summary>
            Gets the collection of the cells that modified by the client.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.PageSize">
      <summary>
            Gets or sets the page size in paging mode.
            </summary>
      <remarks>
            When in paging mode, the control will display PageSize rows of data once,
            and display the page select control in the tab bar.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.EnablePaging">
      <summary>
            Gets or sets whether to enable the control's paging mode.
            </summary>
      <remarks>
            When sets to true, the control will display PageSize rows of data once,
            and display the page select control in the tab bar.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ShowDefaultGridLine">
      <summary>
            Gets or sets whether to show the default grid lines of the cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ShowSubmitButton">
      <summary>
            Gets or sets whether to show the submit button.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ShowSaveButton">
      <summary>
            Gets or sets whether to show the save button.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ShowUndoButton">
      <summary>
            Gets or sets whether to show the undo button.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.DefaultGridLineColor">
      <summary>
            Gets or sets the default grid line's color.
            </summary>
      <example>
        <code>
            [C#]
            	GridWeb1.DefaultGridLineColor = Color.Red;
            	
            [Visual Basic]
            	GridWeb1.DefaultGridLineColor = Color.Red
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.EnableDoubleClickEvent">
      <summary>
            Gets or sets whether to enable customer side double-click event.
            </summary>
      <remarks>
            When sets to true, the control will receive customer side double-click events and you may
            handle these events on the server side. Otherwise the control will ignore any double-click
            events.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ForceValidation">
      <summary>
            Gets or sets whether to force customer side validation. 
            </summary>
      <remarks>
            When sets to true, data will not post to server until all input fields are valid.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.DefaultFontName">
      <summary>
            Gets or sets the control's default font name.
            </summary>
      <example>
        <code>
            [C#]
            	GridWeb1.DefaultFontName = "Arial";
            	
            [Visual Basic]
            	GridWeb1.DefaultFontName = "Arial"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.DefaultFontSize">
      <summary>
            Gets or sets the control's default font size.
            </summary>
      <example>
        <code>
            [C#]
            	GridWeb1.DefaultFontSize = new System.Web.UI.WebControls.FontUnit("10pt");
            
            [Visual Basic]
            	GridWeb1.DefaultFontSize = New System.Web.UI.WebControls.FontUnit("10pt")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.EditMode">
      <summary>
            Gets or sets the control's edit mode.
            </summary>
      <remarks>
            When sets to true, the control's cells are editable, and the "save" and the "undo" icon
            are displayed. When sets to false, the control's cells are readonly, and the "save" and 
            the "undo" icon are not displayed.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.EnableStyleDialogbox">
      <summary>
            Gets or sets whether to enable the client side style dialogbox.
            </summary>
      <remarks>
            When sets to true, the user can use the style dialogbox to set a cell's style
            by selecting the "Format Cell..." from the popup menu.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.EnableClientFreeze">
      <summary>
            Gets or sets whether to enable the client side freezing operations.
            </summary>
      <remarks>
            When sets to true, the user can use the right-click menu to freeze/unfreeze panes.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.EnableClientColumnOperations">
      <summary>
            Gets or sets whether to enable the client side column operations.
            </summary>
      <remarks>
            When sets to true, the user can use the right-click menu to add/remove columns.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.EnableClientRowOperations">
      <summary>
            Gets or sets whether to enable the client side row operations.
            </summary>
      <remarks>
            When sets to true, the user can use the right-click menu to add/remove rows.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.EnableClientMergeOperations">
      <summary>
            Gets or sets whether to enable the client side merge operations.
            </summary>
      <remarks>
            When sets to true, the user can use the right-click menu to merge/unmerge cells.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.EnableClientResizeColumnRow">
      <summary>
            Gets or sets whether to enable the client side resize column and row.
            </summary>
      <remarks>
            When sets to true, the user can resize the column and row at client side.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.WebWorksheets">
      <summary>
            Gets or sets the WebWorksheets object.
            Main data storage of the GridWeb control.
            </summary>
      <example>
        <code>
            [C#]
            	// Gets the worksheets object.
            	WebWorksheets sheets = GridWeb1.WebWorksheets;
            	// Creates a new worksheet
            	sheets.Add("My sheet");
            	
            [Visual Basic]
            	' Gets the worksheets object.
            	Dim sheets As WebWorksheets =  GridWeb1.WebWorksheets 
               ' Creates a new worksheet
            	sheets.Add("My sheet")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.CustomCommandButtons">
      <summary>
            The custom command button collection.
            </summary>
      <example>
        <code>
            [C#]
            CustomCommandButton button = new CustomCommandButton();
            button.Command = "MyCommand";
            button.ImageUrl = "images/button1.gif";
            GridWeb1.CustomCommandButtons.Add(button);
            [VB]
            Dim button As CustomCommandButton =  New CustomCommandButton() 
            button.Command = "MyCommand"
            button.ImageUrl = "images/button1.gif"
            GridWeb1.CustomCommandButtons.Add(button)
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.EnableMetalLightEffect">
      <summary>
            Gets or sets whether to apply metal light effect.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.PresetStyle">
      <summary>
            Gets or sets the preset style.
            </summary>
      <example>
        <code>
            [C#]
            	GridWeb1.PresetStyle = PresetStyle.Traditional1;
            	
            [Visual Basic]
            	GridWeb1.PresetStyle = PresetStyle.Traditional1
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.SessionMode">
      <summary>
            Gets or sets the session mode of the grid.
            There are 3 type of session mode:<br />
            1. Session(default): Use system session to store sheet data.<br />
            Generally the asp.net uses InProc session state. The grid also supports "StateServer" out process session state
            and SQLServer session state.<br />
            2. ViewState: Use page's viewstate to store sheet data.<br />
            3. Custom: Use LoadCustomData and SheetDataUpdated events to store/recover sheet data.<br /></summary>
      <remarks>
            When using SessionMode.ViewState, the grid will store sheets data in the page's view state. This will
            decrease the server's memory usage, but the page's size will be larger and it will impact
            the overall performance.
            </remarks>
      <example>
        <code>
            [C#]
            	GridWeb1.SessionMode = SessionMode.ViewState;
            	
            [Visual Basic]
            	GridWeb1.SessionMode = SessionMode.ViewState
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.CustomStyleFileName">
      <summary>
            Gets or sets the custom style file name.
            </summary>
      <example>
        <code>
            [C#]
            	GridWeb1.CustomStyleFileName = "c:\\style\\mystyle.xml";
            	
            [Visual Basic]
            	GridWeb1.CustomStyleFileName = "c:\\style\\mystyle.xml"
            </code>
      </example>
      <remarks>
            The custom style file is an XML file.
            When sets the file name, the file will be loaded immediately.
            Hear is the content of the "standard preset style"
            -------------------------------------------------------
            &lt;Aspose.Cells.GridWeb.ViewerStyleTemplate runat="server" HeaderBarWidth="30pt" ScrollBarBaseColor="" FrameTableStyle-BorderStyle="Solid" FrameTableStyle-LeftBorderStyle-BorderWidth="" 
            FrameTableStyle-LeftBorderStyle-BorderColor="" FrameTableStyle-RightBorderStyle-BorderWidth="" FrameTableStyle-RightBorderStyle-BorderColor="" FrameTableStyle-BorderWidth="1px" 
            FrameTableStyle-CellSpacing="0" FrameTableStyle-BorderColor="Gray" FrameTableStyle-CellPadding="0" FrameTableStyle-TopBorderStyle-BorderWidth="" FrameTableStyle-TopBorderStyle-BorderColor="" 
            FrameTableStyle-BottomBorderStyle-BorderWidth="" FrameTableStyle-BottomBorderStyle-BorderColor="" HeaderBarStyle-LeftBorderStyle-BorderStyle="Solid" HeaderBarStyle-LeftBorderStyle-BorderWidth="1px" 
            HeaderBarStyle-LeftBorderStyle-BorderColor="White" HeaderBarStyle-VerticalAlign="Middle" HeaderBarStyle-RightBorderStyle-BorderStyle="Solid" HeaderBarStyle-RightBorderStyle-BorderWidth="1px" 
            HeaderBarStyle-RightBorderStyle-BorderColor="Gray" HeaderBarStyle-BorderWidth="1px" HeaderBarStyle-Font-Size="10pt" HeaderBarStyle-BorderColor="Gray" HeaderBarStyle-BorderStyle="Solid" 
            HeaderBarStyle-HorizontalAlign="Center" HeaderBarStyle-ForeColor="Black" HeaderBarStyle-TopBorderStyle-BorderStyle="Solid" HeaderBarStyle-TopBorderStyle-BorderWidth="1px" 
            HeaderBarStyle-TopBorderStyle-BorderColor="White" HeaderBarStyle-BackColor="#E0E0E0" HeaderBarStyle-BottomBorderStyle-BorderStyle="Solid" HeaderBarStyle-BottomBorderStyle-BorderWidth="1px" 
            HeaderBarStyle-BottomBorderStyle-BorderColor="Gray" ViewTableStyle-LeftBorderStyle-BorderWidth="" ViewTableStyle-LeftBorderStyle-BorderColor="" ViewTableStyle-LayoutFixed="Fixed" 
            ViewTableStyle-RightBorderStyle-BorderWidth="" ViewTableStyle-RightBorderStyle-BorderColor="" ViewTableStyle-BorderWidth="0px" ViewTableStyle-CellSpacing="0" ViewTableStyle-CellPadding="0" 
            ViewTableStyle-TopBorderStyle-BorderWidth="" ViewTableStyle-TopBorderStyle-BorderColor="" ViewTableStyle-BottomBorderStyle-BorderWidth="" ViewTableStyle-BottomBorderStyle-BorderColor="" 
            BottomTableStyle-LeftBorderStyle-BorderWidth="" BottomTableStyle-LeftBorderStyle-BorderColor="" BottomTableStyle-LayoutFixed="Fixed" BottomTableStyle-RightBorderStyle-BorderWidth="" 
            BottomTableStyle-RightBorderStyle-BorderColor="" BottomTableStyle-BorderWidth="0px" BottomTableStyle-CellSpacing="0" BottomTableStyle-CellPadding="1" 
            BottomTableStyle-TopBorderStyle-BorderStyle="Solid" BottomTableStyle-TopBorderStyle-BorderWidth="1px" BottomTableStyle-TopBorderStyle-BorderColor="Gray" 
            BottomTableStyle-BottomBorderStyle-BorderWidth="" BottomTableStyle-BottomBorderStyle-BorderColor="" HeaderBarHeight="15pt" ActiveTabStyle-LeftBorderStyle-BorderWidth="" 
            ActiveTabStyle-LeftBorderStyle-BorderColor="" ActiveTabStyle-RightBorderStyle-BorderWidth="" ActiveTabStyle-RightBorderStyle-BorderColor="" ActiveTabStyle-Height="15pt" 
            ActiveTabStyle-BorderWidth="1px" ActiveTabStyle-Font-Size="10pt" ActiveTabStyle-BorderColor="Gray" ActiveTabStyle-ForeColor="Black" ActiveTabStyle-TopBorderStyle-BorderWidth="" 
            ActiveTabStyle-TopBorderStyle-BorderColor="" ActiveTabStyle-BackColor="White" ActiveTabStyle-BottomBorderStyle-BorderWidth="" ActiveTabStyle-BottomBorderStyle-BorderColor="" 
            HeaderBarTableStyle-LeftBorderStyle-BorderWidth="" HeaderBarTableStyle-LeftBorderStyle-BorderColor="" HeaderBarTableStyle-LayoutFixed="Fixed" HeaderBarTableStyle-RightBorderStyle-BorderWidth="" 
            HeaderBarTableStyle-RightBorderStyle-BorderColor="" HeaderBarTableStyle-BorderWidth="0px" HeaderBarTableStyle-CellSpacing="0" HeaderBarTableStyle-BorderCollapse="Separate" 
            HeaderBarTableStyle-CellPadding="0" HeaderBarTableStyle-TopBorderStyle-BorderWidth="" HeaderBarTableStyle-TopBorderStyle-BorderColor="" HeaderBarTableStyle-BottomBorderStyle-BorderWidth="" 
            HeaderBarTableStyle-BottomBorderStyle-BorderColor="" TabStyle-LeftBorderStyle-BorderWidth="" TabStyle-LeftBorderStyle-BorderColor="" TabStyle-RightBorderStyle-BorderWidth="" 
            TabStyle-RightBorderStyle-BorderColor="" TabStyle-Height="15pt" TabStyle-BorderWidth="1px" TabStyle-Font-Size="10pt" TabStyle-BorderColor="Gray" TabStyle-ForeColor="Black" 
            TabStyle-TopBorderStyle-BorderWidth="" TabStyle-TopBorderStyle-BorderColor="" TabStyle-BackColor="#E0E0E0" TabStyle-BottomBorderStyle-BorderWidth="" TabStyle-BottomBorderStyle-BorderColor="" 
            ScrollBarArrowColor=""&gt;&lt;/Aspose.Cells.GridWeb.ViewerStyleTemplate&gt;
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ShowHeaderBar">
      <summary>
            Specifies whether to show the header bar of the control.
            </summary>
      <example>
        <code>
            [C#]
            	GridWeb1.ShowHeaderBar = false;
            	
            [Visual Basic]
            	GridWeb1.ShowHeaderBar = False
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.HeaderBarStyle">
      <summary>
            Gets or sets the header bar's style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.Width">
      <summary>
            Gets or sets the width( System.Web.UI.WebControl.Unit ) of the control.
            </summary>
      <example>
        <code>
            [C#]
            	GridWeb1.Width = new System.Web.UI.WebControls.Unit(320, System.Web.UI.WebControls.UnitType.Point);
            	GridWeb1.Height = new System.Web.UI.WebControls.Unit(240, System.Web.UI.WebControls.UnitType.Point);
            
            [Visual Basic]
            	GridWeb1.Width = New System.Web.UI.WebControls.Unit(320, System.Web.UI.WebControls.UnitType.Point)
            	GridWeb1.Height = New System.Web.UI.WebControls.Unit(240, System.Web.UI.WebControls.UnitType.Point)
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.Height">
      <summary>
            Gets or sets the height( System.Web.UI.WebControl.Unit ) of the control.
            </summary>
      <example>
        <code>
            [C#]
            	GridWeb1.Width = new System.Web.UI.WebControls.Unit(320, System.Web.UI.WebControls.UnitType.Point);
            	GridWeb1.Height = new System.Web.UI.WebControls.Unit(240, System.Web.UI.WebControls.UnitType.Point);
            
            [Visual Basic]
            	GridWeb1.Width = New System.Web.UI.WebControls.Unit(320, System.Web.UI.WebControls.UnitType.Point)
            	GridWeb1.Height = New System.Web.UI.WebControls.Unit(240, System.Web.UI.WebControls.UnitType.Point)
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.HeaderBarWidth">
      <summary>
            Gets or sets the width( System.Web.UI.WebControl.Unit ) or the left header bar of the control.
            </summary>
      <example>
        <code>
            [C#]
            	GridWeb1.HeaderBarWidth = new System.Web.UI.WebControls.Unit(32, System.Web.UI.WebControls.UnitType.Point);
            	GridWeb1.HeaderBarHeight = new System.Web.UI.WebControls.Unit(24, System.Web.UI.WebControls.UnitType.Point);
            
            [Visual Basic]
            	GridWeb1.HeaderBarWidth = New System.Web.UI.WebControls.Unit(32, System.Web.UI.WebControls.UnitType.Point)
            	GridWeb1.HeaderBarHeight = New System.Web.UI.WebControls.Unit(24, System.Web.UI.WebControls.UnitType.Point)
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.HeaderBarHeight">
      <summary>
            Gets or sets the height( System.Web.UI.WebControl.Unit ) of the top header bar of the control.
            </summary>
      <example>
        <code>
            [C#]
            	GridWeb1.HeaderBarWidth = new System.Web.UI.WebControls.Unit(32, System.Web.UI.WebControls.UnitType.Point);
            	GridWeb1.HeaderBarHeight = new System.Web.UI.WebControls.Unit(24, System.Web.UI.WebControls.UnitType.Point);
            
            [Visual Basic]
            	GridWeb1.HeaderBarWidth = New System.Web.UI.WebControls.Unit(32, System.Web.UI.WebControls.UnitType.Point)
            	GridWeb1.HeaderBarHeight = New System.Web.UI.WebControls.Unit(24, System.Web.UI.WebControls.UnitType.Point)
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.MinColumn">
      <summary>
            Gets or sets the minimum display column index(zero based) of the web sheet.
            The control uses the smaller value of MinColumn and sheet data's min column.
            </summary>
      <example>
        <code>
            [C#]
            	// Creates a 4x4 "display window".
            	GridWeb1.MinRow = 2;
            	GridWeb1.MaxRow = 5;
            	GridWeb1.MinColumn = 3;
            	GridWeb1.MaxColumn = 6;
            	
            [Visual Basic]
            	' Creates a 4x4 "display window".
            	GridWeb1.MinRow = 2
            	GridWeb1.MaxRow = 5
            	GridWeb1.MinColumn = 3
            	GridWeb1.MaxColumn = 6
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.MaxColumn">
      <summary>
            Gets or sets the maximum display column index(zero based) of the web sheet.
            The control uses the greater value of MaxColumn and sheet data's max column.
            </summary>
      <example>
        <code>
            [C#]
            	// Creates a 4x4 "display window".
            	GridWeb1.MinRow = 2;
            	GridWeb1.MaxRow = 5;
            	GridWeb1.MinColumn = 3;
            	GridWeb1.MaxColumn = 6;
            	
            [Visual Basic]
            	' Creates a 4x4 "display window".
            	GridWeb1.MinRow = 2
            	GridWeb1.MaxRow = 5
            	GridWeb1.MinColumn = 3
            	GridWeb1.MaxColumn = 6
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.MinRow">
      <summary>
            Gets or sets the minimum display row index(zero based) of the web sheet.
            The control uses the smaller value of MinRow and sheet data's min row.
            </summary>
      <example>
        <code>
            [C#]
            	// Creates a 4x4 "display window".
            	GridWeb1.MinRow = 2;
            	GridWeb1.MaxRow = 5;
            	GridWeb1.MinColumn = 3;
            	GridWeb1.MaxColumn = 6;
            	
            [Visual Basic]
            	' Creates a 4x4 "display window".
            	GridWeb1.MinRow = 2
            	GridWeb1.MaxRow = 5
            	GridWeb1.MinColumn = 3
            	GridWeb1.MaxColumn = 6
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.MaxRow">
      <summary>
            Gets or sets the maximum display row index(zero based) of the web sheet.
            The control uses the greater value of MaxRow and sheet data's max row.
            </summary>
      <example>
        <code>
            [C#]
            	// Creates a 4x4 "display window".
            	GridWeb1.MinRow = 2;
            	GridWeb1.MaxRow = 5;
            	GridWeb1.MinColumn = 3;
            	GridWeb1.MaxColumn = 6;
            	
            [Visual Basic]
            	' Creates a 4x4 "display window".
            	GridWeb1.MinRow = 2
            	GridWeb1.MaxRow = 5
            	GridWeb1.MinColumn = 3
            	GridWeb1.MaxColumn = 6
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.FrameTableStyle">
      <summary>
            Gets or sets the frame style of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.HeaderBarTableStyle">
      <summary>
            Gets or sets the header bar style of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ViewTableStyle">
      <summary>
            Gets or sets the data view panel's style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.BottomTableStyle">
      <summary>
            Gets or sets the style of the bottom bar of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ShowBottomBar">
      <summary>
            Specifies whether to show the bottom bar(includes command bar and tab bar). Note: Take effect only with a licensed control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ShowCommandBarAtTop">
      <summary>
            Specifies whether to show the command bar(includes command bar and tab bar) at the top of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.NoScroll">
      <summary>
            Gets or sets whether to disable scrolling for the grid. If set to true, the grid will stretch automatically to fit its content.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.NoHScroll">
      <summary>
            Gets or sets a value indicating whether the horizontal scroll bar is hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.NoVScroll">
      <summary>
            Gets or sets a value indicating whether the vertical scroll bar is hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.DisplayCellTip">
      <summary>
            Gets or sets whether to display tooltip for the cells of the grid.
            The default value of this property is true.
            If set to true, when moving mouse pointer on a cell of the grid, the cell will show a tooltip contains the cell's value and formula information.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.EnableSmartNavigation">
      <summary>
            Gets or sets whether to enable the Smart Navigation Mode for the control.
            The default value of this property is false.
            When in Smart Navigation Mode, the control will post data in the background,
            and this feature provides an improved visual effect without any refresh on the page.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ShowTabBar">
      <summary>
            Specifies whether to show the tab bar(located in the bottom of the control). Note: Take effect only with a licensed control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.XhtmlMode">
      <summary>
            Specifies whether to generate XHTML output. In .Net 1.0 the default value is False. And in .Net 2.0 the default value is True.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ShowLoading">
      <summary>
            Specifies whether to show a loading dialogbox while postbacking to server.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ShowContextMenu">
      <summary>
            Indicates whether to show context menu.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ShowLoadingPosition">
      <summary>
            Specifies the position of a loading dialogbox to show while postbacking to server.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.AutoExtendMaxRowColumn">
      <summary>
            Indicates whether to extend max row / column automatically when calculating formulas.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.EnableAJAX">
      <summary>
            Specifies whether to enable instant updating. Note: only supported with IE 6 or newer version browsers.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.EnableAsync">
      <summary>
            Specifies whether to enable to load data asynchronously. Note: it is not available when using one of NoScroll, EnablePaging or DataBinding.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.TabStyle">
      <summary>
            Gets or sets the style of the tab bar.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ActiveTabStyle">
      <summary>
            Specifies the style of the active tab.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ScrollBarBaseColor">
      <summary>
            Specifies the color of the scroll bar of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ScrollBarArrowColor">
      <summary>
            Specifies the color of the scrollbar's arrow button.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.InitializeNewBindRow">
      <summary>
            Occurs when the worksheet has created a new bind row and need to initialize it.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.SubmitCommand">
      <summary>
            Occurs when the "submit" button is clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.SaveCommand">
      <summary>
            Occurs when the "save" button is clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.UndoCommand">
      <summary>
            Occurs when the "undo" button is clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.SheetTabClick">
      <summary>
            Occurs when the sheet tab is clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.RowDoubleClick">
      <summary>
            Occurs when the row header is double-clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.ColumnDoubleClick">
      <summary>
            Occurs when the column header is double-clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.CellDoubleClick">
      <summary>
            Occurs when the cell is double-clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.CellClickOnAjax">
      <summary>
            Occurs when the cell is  clicked,and need to do ajaxcallback for this event.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.SheetDataUpdated">
      <summary>
            Occurs when the control has loaded the posted data and updated the sheet data.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.LoadCustomData">
      <summary>
            Fires when the control's SessionMode is set to Custom and needs to load sheet data.
            You may handle this event in Custom Session mode to load sheet data from file or database.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.PageIndexChanged">
      <summary>
            Occurs when the control's sheet page index changed.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.RowInserted">
      <summary>
            Occurs when user insert a row from client-side menu.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.RowDeleted">
      <summary>
            Occurs when user has deleted a row from client-side menu.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.RowDeleting">
      <summary>
            Occurs when user is trying to delete a row from the client-side menu.
            You may handle this event and throw a RejectDeleteException exception to cancel a deleting operation.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.ColumnInserted">
      <summary>
            Occurs when user insert a column from client-side menu.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.ColumnDeleted">
      <summary>
            Occurs when user delete a column from client-side menu.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.ColumnDeleting">
      <summary>
            Occurs when user is trying to delete a column from the client-side menu.
            You may handle this event and set the cancel parameter to True to cancel a deleting operation.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.CellCommand">
      <summary>
            Occurs when a cell's command hyperlink is clicked.
            When this event is fired, its parameter e.Argument contains the command's name.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.CellError">
      <summary>
            Occurs when a cell's input value error.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.CustomCommand">
      <summary>
            Occurs when user clicks a custom command button.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWeb.BindingChildView">
      <summary>
            Occurs when the grid is about to bind a child view sheet.
            You may handle this event to modify the child view sheet's default bind columns.
            </summary>
      <example>
        <code>
            [C#]
            // Handles the BindingChildView event to set the UnitPrice column.
            private void GridWeb1_BindingChildView(Aspose.Cells.GridWeb.GridWeb childGrid, Aspose.Cells.GridWeb.Data.WebWorksheet childSheet)
            {
            	DataView view = (DataView)childSheet.DataSource;
            	if (view.Table.TableName == "Order Details")
            	{
            		childSheet.BindColumns["UnitPrice"].NumberType = NumberType.Currency3;
            	}
            }
            [VB]
            'Handles the BindingChildView event to set the UnitPrice column.
            Private Sub GridWeb1_BindingChildView(ByVal childGrid As Aspose.Cells.GridWeb.GridWeb, ByVal childSheet As Aspose.Cells.GridWeb.Data.WebWorksheet) Handles GridWeb1.BindingChildView
            	Dim view As DataView = CType(childSheet.DataSource, DataView)
            	If view.Table.TableName = "Order Details" Then
            		childSheet.BindColumns("UnitPrice").NumberType = NumberType.Currency3
            	End If
            End Sub
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWeb.ActiveSheetIndex">
      <summary>
            Gets or sets the active sheet index. Equal to the WebWorksheets.ActiveSheetIndex.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.GridWebForm">
      <summary>
            GridWebForm control. It works with the GridWeb control. Set the GridWebControl property for it before run it.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWebForm.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWebForm.ShowForm">
      <summary>
            Hides the GridWeb control and shows the GridWebForm control.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWebForm.HideForm">
      <summary>
            Hides the Form and shows the GridWeb control.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWebForm.RaisePostDataChangedEvent">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWebForm.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>
            Internal used only.
            </summary>
      <param name="postDataKey">
      </param>
      <param name="postCollection">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.GridWebForm.RaisePostBackEvent(System.String)">
      <summary>
            Internal used only.
            </summary>
      <param name="eventArgument">
      </param>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWebForm.LineNumber">
      <summary>
            Gets or sets the current record line number of the sheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWebForm.EditMode">
      <summary>
            Gets or sets the Edit Mode of the GridWebForm control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWebForm.EnableCreateCustomButtomForGridWeb">
      <summary>
            Gets or sets whether to create a switching button in the GridWeb control's command bar.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWebForm.GridWebControl">
      <summary>
            Gets or sets the linked GridWeb control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWebForm.FormName">
      <summary>
            Gets or sets the form's name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWebForm.Width">
      <summary>
            Gets or sets the width of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWebForm.Height">
      <summary>
            Gets or sets the height of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.GridWebForm.Visible">
      <summary>
            Gets or sets whether to show the form control. This property is controlled by the control itself. Do not modify it manually.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridWeb.GridWebForm.SaveCommand">
      <summary>
            Occurs when the "save" button is clicked.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.License">
      <summary>
            Provides methods to license the component.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code></example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.License.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code></example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.License.SetLicense(System.String)">
      <summary>
            Licenses the component.
            </summary>
      <param name="licenseName">Can be a full or short file name or name of an embedded resource.
            Use an empty string to switch to evaluation mode.</param>
      <remarks>
        <p>Tries to find the license in the following locations:</p>
        <p>1. Explicit path.</p>
        <p>2. The folder of the component assembly.</p>
        <p>3. The folder of the client's calling assembly.</p>
        <p>4. The folder of the entry assembly.</p>
        <p>5. An embedded resource in the client's calling assembly.</p>
        <p>
          <b>Note:</b>On the .NET Compact Framework, tries to find the license only in these locations:</p>
        <p>1. Explicit path.</p>
        <p>2. An embedded resource in the client's calling assembly.</p>
      </remarks>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As License = New License
            license.SetLicense("MyLicense.lic")
            </code></example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.License.SetLicense(System.IO.Stream)">
      <summary>
            Licenses the component.
            </summary>
      <param name="stream">A stream that contains the license.</param>
      <remarks>
        <p>Use this method to load a license from a stream.</p>
      </remarks>
      <example>
        <code>
            [C#]
            
            License license = new License();
            license.SetLicense(myStream);
            
            
            [Visual Basic]
            
            Dim license as License = new License
            license.SetLicense(myStream)
            </code>
      </example>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PivotCache">
      <summary>
             Represents the memory cache for a PivotTable report. The PivotCache object is a member of the <see cref="T:Aspose.Cells.GridWeb.Data.PivotCaches" /> collection.
             </summary>
      <remarks>
             Uses the PivotCache method to return a PivotCache object for a PivotTable report (each report has only one cache). 
             The source data of PivotCache come from WebWorksheet, DataTable, and so on. 
             </remarks>
      <example>
        <code>
             
             [C#]
             
             //On the assumption that worksheet "Sheet1" has datas, then creates a PivotTable report base on it.
             WebWorksheet sourceSheet = GridWeb1.WebWorksheets["Sheet1"];
             Aspose.Cells.GridWeb.Data.WebCellArea sourceRange = new WebCellArea();
             sourceRange.StartRow = 0;
             sourceRange.StartColumn = 0;
             sourceRange.EndRow = 10;
             sourceRange.EndColumn = 5;
            
             PivotCache cache = GridWeb1.WebWorksheets.PivotCaches.Add(sourceSheet, sourceRange);
            
             PivotTable table = cache.CreatePivotTable();
            
             table.PivotFields[0].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[1].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[2].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[3].Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField;
             table.PivotFields[4].Orientation = PivotFieldOrientation.ColumnField;
             table.PivotFields[5].Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField;
                
             table.PivotFields[3].Function = PivotFieldFunction.Count;
             table.PivotFields[5].Function = PivotFieldFunction.Sum;
             
             table.DataBind();
             
             //Creates a PivotTable report from DataView or DataTable.
             DataView dataView;//Or  DataTable dataTable;
                 .
                 .
                 .
             Sets dataView(dataTable) Value
                 .
                 .
                 .     
            
             PivotCache cache = GridWeb1.WebWorksheets.PivotCaches.Add(dataView);
             //Or PivotCache cache = GridWeb1.WebWorksheets.PivotCaches.Add(dataTable);
             PivotTable table = cache.CreatePivotTable();
             table = GridWeb1.WebWorksheets.PivotTables["PivotTable1"];
             table.PivotFields[0].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[1].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[2].Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField;
             table.DataBind();
             
             
             [VB]
             
             
             'On the assumption that worksheet "Sheet1" has datas, then creates a PivotTable report base on it.
             Dim sourceSheet As WebWorksheet =  GridWeb1.WebWorksheets("Sheet1")
             Dim sourceRange As Aspose.Cells.GridWeb.Data.WebCellArea =  New WebCellArea()/
             sourceRange.StartRow = 0
             sourceRange.StartColumn = 0
             sourceRange.EndRow = 10
             sourceRange.EndColumn = 5
            
             Dim cache As PivotCache =  GridWeb1.WebWorksheets.PivotCaches.Add(sourceSheet,sourceRange)
            
             Dim table As PivotTable =  cache.CreatePivotTable()
            
             table.PivotFields(0).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(1).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(2).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(3).Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField
             table.PivotFields(4).Orientation = PivotFieldOrientation.ColumnField
             table.PivotFields(5).Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField
            
             table.PivotFields(3).Function = PivotFieldFunction.Count
             table.PivotFields(5).Function = PivotFieldFunction.Sum
            
             table.DataBind()
            
             'Creates a PivotTable report from DataView or DataTable.  
            
             Dim dataView As DataView ' Or Dim dataTable As DataTable
                 . 
                 .
             Sets dataView(dataTable) Value
                 . 
                 .
                 .
             
             Dim cache As PivotCache =  GridWeb1.WebWorksheets.PivotCaches.Add(dataView)
             'Or Dim cache As PivotCache =  GridWeb1.WebWorksheets.PivotCaches.Add(dataTable)
             Dim table As PivotTable =  cache.CreatePivotTable()
             table = GridWeb1.WebWorksheets.PivotTables("PivotTable1")
             table.PivotFields(0).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(1).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(2).Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField
             table.DataBind()
             
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCache.CreatePivotTable">
      <summary>
            Creates PivotTable report to a new Sheet.
            </summary>
      <returns>The PivotTable object</returns>
      <remarks>
            Calling this method will create a PivotTable object and a new worksheet.
            Then adds the PivotTable object to the last location of GridWeb.Worksheets.PivotTables.
            If You call the PivotTable.DataBind() method, the PivotTable report will be painted to the created worksheet.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCache.CreatePivotTable(System.String)">
      <summary>
            Creates PivotTable report to a new Sheet.
            <param name="tableName">The name of the pivotTable object</param></summary>
      <returns>The PivotTable object</returns>
      <remarks>
            Calling this method will create a PivotTable object and a new worksheet.
            Then adds the PivotTable object to the last location of GridWeb.Worksheets.PivotTables.
            If You call the PivotTable.DataBind() method, the PivotTable report will be painted to the created worksheet.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCache.CreatePivotTable(Aspose.Cells.GridWeb.Data.WebWorksheet,Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Creates PivotTable report to the targetSheet.
            </summary>
      <param name="targetSheet">The sheet that the pivotTable report will paint to</param>
      <param name="targetCell">The start cell that the pivotTable report will paint to</param>
      <returns>The PivotTable object</returns>
      <remarks>
            Calling this method will create a PivotTable object 
            Then adds the PivotTable object to the last location of GridWeb.Worksheets.PivotTables.
            If You call the PivotTable.DataBind() method, the PivotTable report will be painted to the targetSheet
            starting at the targetCell.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCache.CreatePivotTable(Aspose.Cells.GridWeb.Data.WebWorksheet,Aspose.Cells.GridWeb.Data.WebCell,System.String)">
      <summary>
            Creates PivotTable report to the targetSheet.
            </summary>
      <param name="targetSheet">The sheet that the pivotTable report will paint to</param>
      <param name="targetCell">The start cell that the pivotTable report will paint to</param>
      <param name="tableName">The name of the pivotTable object</param>
      <returns>The PivotTable object</returns>
      <remarks>
            Calling this method will create a PivotTable object naming tableName
            Then adds the PivotTable object to the last location of GridWeb.Worksheets.PivotTables.
            If You call the PivotTable.DataBind() method, the PivotTable report will be painted to the targetSheet
            starting at the targetCell.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCache.Equals(System.Object)">
      <summary>
            Determines whether two Object instances are equal.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCache.GetHashCode">
      <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCache.ToString">
      <summary>
            Returns a String that represents the current Object
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCache.ResetDataSource(System.Data.DataTable)">
      <summary>
             Resets the source data
            </summary>
      <param name="dataTable">The data source</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCache.ResetDataSource(System.Data.DataView)">
      <summary>
             Resets the source data
            </summary>
      <param name="dataView">The data source</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCache.ResetDataSource(Aspose.Cells.GridWeb.Data.WebWorksheet,Aspose.Cells.GridWeb.Data.WebCellArea)">
      <summary>
             Resets the source data
            </summary>
      <param name="sourceSheet">The sheet of source dat</param>
      <param name="sourceCellArea">The range of the sheet</param>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotCache.Parent">
      <summary>
            Returns the parent object for the specified object(the container of PivotCache). Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotCache.DataTable">
      <summary>
            Returns the data source of System.Data.DataTable for the PivotTable report.
            </summary>
      <remarks>
            DataTable.Columns will be convert to PivotTable fields. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotCache.DataView">
      <summary>
            Returns the data source of System.Data.DataView for the PivotTable report.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotCache.SourceSheet">
      <summary>
            Returns the data source of WebWorksheet for the PivotTable report.
            </summary>
      <remarks>
            DataTable.Columns will be convert PivotTable fields.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotCache.SourceCellArea">
      <summary>
            Returns the range of the data source using with SourceSheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Changes data source range
            //Original value: StartRow=0;StartColumn=0;EndRow=10;EndColumn=4;
            PivotTable table = GridWeb1.WebWorksheets.PivotTables["myPivotTable"];
            //Adds 2 row data
            table.PivotCache.SourceCellArea.EndRow = 12;
            
            [VB]
            
            'Changes data source range
            'Original value: StartRow=0;StartColumn=0;EndRow=10;EndColumn=4;
            Dim table As PivotTable =  GridWeb1.WebWorksheets.PivotTables("myPivotTable") 
             'Adds 2 row data
            table.PivotCache.SourceCellArea.EndRow = 12
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotCache.SourceType">
      <summary>
            Represents the type of the source data
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotCache.Name">
      <summary>
            Returns the name of PivotCache.Re
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotCache.Index">
      <summary>
            Returns the index of this object in Parent
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PivotCaches">
      <summary>
             Represents the collection of memory caches from the PivotTable reports in a workbook. 
             Each memory cache is represented by a <see cref="T:Aspose.Cells.GridWeb.Data.PivotCache" /> object.
             </summary>
      <example>
        <code>
             
             [C#]
             
             //On the assumption that worksheet "Sheet1" has datas, then creates a PivotTable report base on it.
             WebWorksheet sourceSheet = GridWeb1.WebWorksheets["Sheet1"];
             Aspose.Cells.GridWeb.Data.WebCellArea sourceRange = new WebCellArea();
             sourceRange.StartRow = 0;
             sourceRange.StartColumn = 0;
             sourceRange.EndRow = 10;
             sourceRange.EndColumn = 5;
            
             PivotCache cache = GridWeb1.WebWorksheets.PivotCaches.Add(sourceSheet, sourceRange);
            
             PivotTable table = cache.CreatePivotTable();
            
             table.PivotFields[0].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[1].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[2].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[3].Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField;
             table.PivotFields[4].Orientation = PivotFieldOrientation.ColumnField;
             table.PivotFields[5].Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField;
                
             table.PivotFields[3].Function = PivotFieldFunction.Count;
             table.PivotFields[5].Function = PivotFieldFunction.Sum;
             
             table.DataBind();
             
             //Creates a PivotTable report from DataView or DataTable.
             DataView dataView;//Or  DataTable dataTable;
                 .
                 .
                 .
             Sets dataView(dataTable) Value
                 .
                 .
                 .     
            
             PivotCache cache = GridWeb1.WebWorksheets.PivotCaches.Add(dataView);
             //Or PivotCache cache = GridWeb1.WebWorksheets.PivotCaches.Add(dataTable);
             PivotTable table = cache.CreatePivotTable();
             table = GridWeb1.WebWorksheets.PivotTables["PivotTable1"];
             table.PivotFields[0].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[1].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[2].Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField;
             table.DataBind();
             
             
             [VB]
             
             
             'On the assumption that worksheet "Sheet1" has datas, then creates a PivotTable report base on it.
             Dim sourceSheet As WebWorksheet =  GridWeb1.WebWorksheets("Sheet1")
             Dim sourceRange As Aspose.Cells.GridWeb.Data.WebCellArea =  New WebCellArea()/
             sourceRange.StartRow = 0
             sourceRange.StartColumn = 0
             sourceRange.EndRow = 10
             sourceRange.EndColumn = 5
            
             Dim cache As PivotCache =  GridWeb1.WebWorksheets.PivotCaches.Add(sourceSheet,sourceRange)
            
             Dim table As PivotTable =  cache.CreatePivotTable()
            
             table.PivotFields(0).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(1).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(2).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(3).Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField
             table.PivotFields(4).Orientation = PivotFieldOrientation.ColumnField
             table.PivotFields(5).Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField
            
             table.PivotFields(3).Function = PivotFieldFunction.Count
             table.PivotFields(5).Function = PivotFieldFunction.Sum
            
             table.DataBind()
            
             'Creates a PivotTable report from DataView or DataTable.  
            
             Dim dataView As DataView ' Or Dim dataTable As DataTable
                 . 
                 .
             Sets dataView(dataTable) Value
                 . 
                 .
                 .
             
             Dim cache As PivotCache =  GridWeb1.WebWorksheets.PivotCaches.Add(dataView)
             'Or Dim cache As PivotCache =  GridWeb1.WebWorksheets.PivotCaches.Add(dataTable)
             Dim table As PivotTable =  cache.CreatePivotTable()
             table = GridWeb1.WebWorksheets.PivotTables("PivotTable1")
             table.PivotFields(0).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(1).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(2).Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField
             table.DataBind()
             
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCaches.IndexOf(Aspose.Cells.GridWeb.Data.PivotCache)">
      <summary>
            Returns the index of the specified PivotCache in the collection
            </summary>
      <param name="pivotCache">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCaches.Add(System.Data.DataTable)">
      <summary>
            Adds a PivotCache from DataTable.
            </summary>
      <param name="dataTable">The data source</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCaches.Add(System.Data.DataTable,System.String)">
      <summary>
            Adds a PivotCahe from DataTable using the specified name.
            </summary>
      <param name="dataTable">The data source</param>
      <param name="cacheName">The cache name</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCaches.Add(System.Data.DataView)">
      <summary>
            Adds a PivotCache from DataView.
            </summary>
      <param name="dataView">The data source</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCaches.Add(System.Data.DataView,System.String)">
      <summary>
            Adds a PivotCahe from DataView using the specified name.
            </summary>
      <param name="dataView">The data source</param>
      <param name="cacheName">The cache name</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCaches.Add(Aspose.Cells.GridWeb.Data.WebWorksheet,Aspose.Cells.GridWeb.Data.WebCellArea)">
      <summary>
            Adds a PivotCache from sheet
            </summary>
      <param name="sourceSheet">The sheet of source data</param>
      <param name="sourceCellArea">The range of the sheet</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCaches.Add(Aspose.Cells.GridWeb.Data.WebWorksheet,Aspose.Cells.GridWeb.Data.WebCellArea,System.String)">
      <summary>
            Adds a PivotCache from sheet using the specified name.
            </summary>
      <param name="sourceSheet">The sheet of source data</param>
      <param name="sourceCellArea">The range of the sheet</param>
      <param name="cacheName">The cache name</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCaches.Clear">
      <summary>
            Removes all PivotCache objects and all PivotTable objects in the control.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCaches.Remove(Aspose.Cells.GridWeb.Data.PivotCache)">
      <summary>
            Removes the specified PivotCache object from the PivotCaches
            and the related PivotTable using the pivotCache as data source.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCaches.RemoveAt(System.Int32)">
      <summary>
            Removes the specified PivotCache object from the PivotCaches
            and the related PivotTable using the pivotCache as data source.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCaches.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the entire PivotCache to a compatible one-dimensional Array, starting at the specified index of the target array
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotCaches.GetEnumerator">
      <summary>
            Returns an IEnumerator for the PivotCaches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotCaches.Item(System.Int32)">
      <summary>
            Gets PivotCache object by index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotCaches.Item(System.String)">
      <summary>
            Gets PivotCache object by name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotCaches.Parent">
      <summary>
            Gets the parent object for the specified object. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotCaches.Count">
      <summary>
            Gets the number of elements contained in the PivotCaches instance
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotCaches.IsSynchronized">
      <summary>
            Gets a value indicating whether access to the PivotCaches is synchronized (thread-safe).
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotCaches.SyncRoot">
      <summary>
            Gets an object that can be used to synchronize access to the PivotCaches.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PivotField">
      <summary>
            Represents a field in a PivotTable report. The PivotField object is a member of the <see cref="T:Aspose.Cells.GridWeb.Data.PivotFields" /> collection. 
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Gets PivotFields of PivotTable[0] 
            PivotField field1 = GridWeb1.WebWorksheets.PivotTables[0].PivotFields["field1"];
            PivotField field2 = GridWeb1.WebWorksheets.PivotTables[0].PivotFields["field2"];
            PivotField field3 = GridWeb1.WebWorksheets.PivotTables[0].PivotFields["field3"];
            PivotField field4 = GridWeb1.WebWorksheets.PivotTables[0].PivotFields["field4"];
            
            //Sets Location of PivotFields
            field1.Orientation = PivotFieldOrientation.RowField;
            field2.Orientation = PivotFieldOrientation.RowField;
            field3.Orientation = PivotFieldOrientation.ColumnField;
            field4.Orientation = PivotFieldOrientation.DataField;
            
            //Sets function of data field
            field3.Function = PivotFieldFunction.Sum;
            
            //Changes row fields order
            field2.Position = 1; //Or field1.Position = 2;
            
            [VB]
            
            'Gets PivotFields of PivotTable[0] 
            Dim field1 As PivotField =  GridWeb1.WebWorksheets.PivotTables(0).PivotFields("field1") 
            Dim field2 As PivotField =  GridWeb1.WebWorksheets.PivotTables(0).PivotFields("field2") 
            Dim field3 As PivotField =  GridWeb1.WebWorksheets.PivotTables(0).PivotFields("field3") 
            Dim field4 As PivotField =  GridWeb1.WebWorksheets.PivotTables(0).PivotFields("field4") 
            
            'Sets Location of PivotFields
            field1.Orientation = PivotFieldOrientation.RowField
            field2.Orientation = PivotFieldOrientation.RowField
            field3.Orientation = PivotFieldOrientation.ColumnField
            field4.Orientation = PivotFieldOrientation.DataField
            
            'Sets function of data field
            field3.Function = PivotFieldFunction.Sum
            'Changes row fields order
            field2.Position = 1 'Or field1.Position = 2;
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotField.CompareTo(System.Object)">
      <summary>
            Compares this instance to a specified object and returns an indication of their relative values.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotField.Equals(System.Object)">
      <summary>
            Determines whether two Object instances are equal.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotField.GetHashCode">
      <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotField.ToString">
      <summary>
            Returns a String that represents the current Object
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotField.Position">
      <summary>
            Represents Position of the field (first, second, third, and so on) 
            among all the fields in its orientation (Rows, Columns, Pages).
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotField.SortOrder">
      <summary>
            Represents the order used to sort the specified PivotTable field.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotField.Orientation">
      <summary>
            Represents The location of the field in the specified PivotTable report.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotField.Function">
      <summary>
            Represents function used to summarize the PivotTable field (data fields only).
            The default function is Count. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotField.Subtotals">
      <summary>
            Returns or sets subtotals displayed with the specified field. Valid only for nondata fields(Column Field and Row Field). 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotField.Caption">
      <summary>
            The label text for the pivot field show in report.
            By default show the name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotField.Name">
      <summary>
            Gets the name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotField.Parent">
      <summary>
            Gets the parent object for the specified object. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotField.FieldItems">
      <summary>
            Gets the data of the specified field.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PivotFieldSubtotalType">
      <summary>
            Summary description for PivotFieldSubtotalType.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldSubtotalType.None">
      <summary>
            Represents None subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldSubtotalType.Automatic">
      <summary>
            Represents Automatic subtotal type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PivotFieldFunction">
      <summary>
            Represents functions used to summarize the PivotTable data field
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldFunction.Count">
      <summary>
            The number of data values.This is the default function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldFunction.Sum">
      <summary>
            The sum of the values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldFunction.Average">
      <summary>
            The average of the values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldFunction.Max">
      <summary>
            The largest value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldFunction.Min">
      <summary>
            The smallest value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldFunction.Product">
      <summary>
            The product of the values.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PivotFieldOrientation">
      <summary>
            Represents The location of the field in the specified PivotTable report.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldOrientation.RowField">
      <summary>
            Sets the PivotField to RowField
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldOrientation.ColumnField">
      <summary>
            Sets the PivotField to ColumnField
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldOrientation.PageField">
      <summary>
            Sets the PivotField to PageField
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldOrientation.DataField">
      <summary>
            Sets the PivotField to DataField
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldOrientation.HiddenField">
      <summary>
            Sets the PivotField to HiddenField
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PivotFields">
      <summary>
            Reprents A collection of all the <see cref="T:Aspose.Cells.GridWeb.Data.PivotField" /> objects in a PivotTable report.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Gets PivotFields of PivotTable[0] 
            PivotField field1 = GridWeb1.WebWorksheets.PivotTables[0].PivotFields["field1"];
            PivotField field2 = GridWeb1.WebWorksheets.PivotTables[0].PivotFields["field2"];
            PivotField field3 = GridWeb1.WebWorksheets.PivotTables[0].PivotFields["field3"];
            PivotField field4 = GridWeb1.WebWorksheets.PivotTables[0].PivotFields["field4"];
            
            //Sets Location of PivotFields
            field1.Orientation = PivotFieldOrientation.RowField;
            field2.Orientation = PivotFieldOrientation.RowField;
            field3.Orientation = PivotFieldOrientation.ColumnField;
            field4.Orientation = PivotFieldOrientation.DataField;
            
            //Sets function of data field
            field3.Function = PivotFieldFunction.Sum;
            
            //Changes row fields order
            field2.Position = 1; //Or field1.Position = 2;
            
            [VB]
            
            'Gets PivotFields of PivotTable[0] 
            Dim field1 As PivotField =  GridWeb1.WebWorksheets.PivotTables(0).PivotFields("field1") 
            Dim field2 As PivotField =  GridWeb1.WebWorksheets.PivotTables(0).PivotFields("field2") 
            Dim field3 As PivotField =  GridWeb1.WebWorksheets.PivotTables(0).PivotFields("field3") 
            Dim field4 As PivotField =  GridWeb1.WebWorksheets.PivotTables(0).PivotFields("field4") 
            
            'Sets Location of PivotFields
            field1.Orientation = PivotFieldOrientation.RowField
            field2.Orientation = PivotFieldOrientation.RowField
            field3.Orientation = PivotFieldOrientation.ColumnField
            field4.Orientation = PivotFieldOrientation.DataField
            
            'Sets function of data field
            field3.Function = PivotFieldFunction.Sum
            'Changes row fields order
            field2.Position = 1 'Or field1.Position = 2;
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotFields.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the entire PivotField to a compatible one-dimensional Array, starting at the specified index of the target array
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotFields.GetEnumerator">
      <summary>
            Returns an IEnumerator for the PivotFields.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotFields.IndexOf(Aspose.Cells.GridWeb.Data.PivotField)">
      <summary>
            Gets the index of the specified PivotField.
            </summary>
      <param name="field">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotFields.Count">
      <summary>
            Gets the number of elements contained in the PivotFields instance
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotFields.IsSynchronized">
      <summary>
            Gets a value indicating whether access to the PivotFields is synchronized (thread-safe).
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotFields.SyncRoot">
      <summary>
            Gets an object that can be used to synchronize access to the PivotFields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotFields.Item(System.Int32)">
      <summary>
            Gets a PivotField by index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotFields.Item(System.String)">
      <summary>
            Gets a PivotField by name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotFields.Parent">
      <summary>
            Gets the parent object for the specified object. Read-only.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PivotFieldSort">
      <summary>
            Represents the order used to sort the specified PivotTable field.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldSort.Asc">
      <summary>
            Rows or Columns organize data ascendable
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldSort.Desc">
      <summary>
            Rows or Columns organize data descendable
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotFieldSort.Auto">
      <summary>
            Rows or Columns organize data natural
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PivotItem">
      <summary>
            Represents an item in a PivotTable field. The items are the individual data entries 
            in a field category. The PivotItem object is a member of the PivotItems collection. 
            The PivotItems collection contains all the items in a PivotField object.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotItem.CompareTo(System.Object)">
      <summary>
            Compares this instance to a specified object and returns an indication of their relative values.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotItem.Equals(System.Object)">
      <summary>
            Determines whether two Object instances are equal.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotItem.GetHashCode">
      <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotItem.ToString">
      <summary>
            Returns a String that represents the current Object
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotItem.Value">
      <summary>
            Gets the value of the specified item.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotItem.Visible">
      <summary>
            Represents whether the specified item visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotItem.Parent">
      <summary>
            Gets the parent object for the specified object. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotItem.Name">
      <summary>
            Gets the name
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotItem.RecordCount">
      <summary>
            Gets the number of the specified item
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PivotItems">
      <summary>
            Represents A collection of all the PivotItem objects in a PivotTable field. The items are the individual data entries in a field category.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotItems.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the entire PivotItem to a compatible one-dimensional Array, starting at the specified index of the target array
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotItems.GetEnumerator">
      <summary>
            Returns an IEnumerator for the PivotItems.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotItems.Item(System.Int32)">
      <summary>
            Gets a item by index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotItems.Item(System.String)">
      <summary>
            Gets a item by name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotItems.Parent">
      <summary>
            Gets the parent object for the specified object. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotItems.Count">
      <summary>
            Gets the number of elements contained in the PivotItems instance
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotItems.IsSynchronized">
      <summary>
            Gets a value indicating whether access to the PivotItems is synchronized (thread-safe).
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotItems.SyncRoot">
      <summary>
            Gets an object that can be used to synchronize access to the PivotItems.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PivotNumberType">
      <summary>
            Represents the NumberType of row total, column total, row grand total, column grand total and data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotNumberType.RowTotalNumberType">
      <summary>
            Reprents row total NumberType
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotNumberType.ColumnTotalNumberType">
      <summary>
            Represents column total NumberType.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotNumberType.RowGrandTotalNumberType">
      <summary>
            Represents row grand total NumberType
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotNumberType.ColumnGrandTotalNumberType">
      <summary>
            Represents column grand total NumberType.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotNumberType.DataNumberType">
      <summary>
            Represents data NumberType.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PivotSourceType">
      <summary>
            Represents the source data type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotSourceType.DataTable">
      <summary>
            Represents data source from a DataTable object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotSourceType.DataView">
      <summary>
            Represents data source from a DataView object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.Data.PivotSourceType.WorkSheet">
      <summary>
            Represents data source from a WebWorksheet objecet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PivotTable">
      <summary>
             Represents a PivotTable report on a worksheet. The PivotTable object is a member of the <see cref="T:Aspose.Cells.GridWeb.Data.PivotTables" /> collection.
             The PivotTables collection contains all the PivotTable objects on a control.
             </summary>
      <example>
        <code>
             
             [C#]
             
             //On the assumption that worksheet "Sheet1" has datas, then creates a PivotTable report base on it.
             WebWorksheet sourceSheet = GridWeb1.WebWorksheets["Sheet1"];
             Aspose.Cells.GridWeb.Data.WebCellArea sourceRange = new WebCellArea();
             sourceRange.StartRow = 0;
             sourceRange.StartColumn = 0;
             sourceRange.EndRow = 10;
             sourceRange.EndColumn = 5;
            
             PivotCache cache = GridWeb1.WebWorksheets.PivotCaches.Add(sourceSheet, sourceRange);
            
             PivotTable table = cache.CreatePivotTable();
            
             table.PivotFields[0].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[1].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[2].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[3].Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField;
             table.PivotFields[4].Orientation = PivotFieldOrientation.ColumnField;
             table.PivotFields[5].Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField;
                
             table.PivotFields[3].Function = PivotFieldFunction.Count;
             table.PivotFields[5].Function = PivotFieldFunction.Sum;
             
             table.DataBind();
             
             //Creates a PivotTable report from DataView or DataTable.
             DataView dataView;//Or  DataTable dataTable;
                 .
                 .
                 .
             Sets dataView(dataTable) Value
                 .
                 .
                 .     
            
             PivotCache cache = GridWeb1.WebWorksheets.PivotCaches.Add(dataView);
             //Or PivotCache cache = GridWeb1.WebWorksheets.PivotCaches.Add(dataTable);
             PivotTable table = cache.CreatePivotTable();
             table = GridWeb1.WebWorksheets.PivotTables["PivotTable1"];
             table.PivotFields[0].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[1].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[2].Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField;
             table.DataBind();
             
             
             [VB]
             
             
             'On the assumption that worksheet "Sheet1" has datas, then creates a PivotTable report base on it.
             Dim sourceSheet As WebWorksheet =  GridWeb1.WebWorksheets("Sheet1")
             Dim sourceRange As Aspose.Cells.GridWeb.Data.WebCellArea =  New WebCellArea()/
             sourceRange.StartRow = 0
             sourceRange.StartColumn = 0
             sourceRange.EndRow = 10
             sourceRange.EndColumn = 5
            
             Dim cache As PivotCache =  GridWeb1.WebWorksheets.PivotCaches.Add(sourceSheet,sourceRange)
            
             Dim table As PivotTable =  cache.CreatePivotTable()
            
             table.PivotFields(0).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(1).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(2).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(3).Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField
             table.PivotFields(4).Orientation = PivotFieldOrientation.ColumnField
             table.PivotFields(5).Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField
            
             table.PivotFields(3).Function = PivotFieldFunction.Count
             table.PivotFields(5).Function = PivotFieldFunction.Sum
            
             table.DataBind()
            
             'Creates a PivotTable report from DataView or DataTable.  
            
             Dim dataView As DataView ' Or Dim dataTable As DataTable
                 . 
                 .
             Sets dataView(dataTable) Value
                 . 
                 .
                 .
             
             Dim cache As PivotCache =  GridWeb1.WebWorksheets.PivotCaches.Add(dataView)
             'Or Dim cache As PivotCache =  GridWeb1.WebWorksheets.PivotCaches.Add(dataTable)
             Dim table As PivotTable =  cache.CreatePivotTable()
             table = GridWeb1.WebWorksheets.PivotTables("PivotTable1")
             table.PivotFields(0).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(1).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(2).Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField
             table.DataBind()
             
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTable.DataBind">
      <summary>
            Binds the PivotTable report to the data source specified by the PivotCache.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTable.Equals(System.Object)">
      <summary>
            Determines whether two Object instances are equal.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTable.GetHashCode">
      <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTable.ToString">
      <summary>
            Returns a String that represents the current Object
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTable.RebuildPivotFields">
      <summary>
            Rebuilds the PivotFields according by the PivotCache
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTable.PivotFields">
      <summary>
            Repesents all fields in PivotTable report.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTable.PivotNumberType">
      <summary>
            Represents the NumberType of the report.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Sets column total cells's NumberType
            PivotTable table = GridWeb1.Worksheets.PivotTable[0];
            table.PivotNumberType.ColumnTotalNumberType = NumberType.Currency2;
            
            [VB]
            
            'Sets column total cells's NumberType
            Dim table As PivotTable =  GridWeb1.Worksheets.PivotTable(0) 
            table.PivotNumberType.ColumnTotalNumberType = NumberType.Currency2
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTable.ReadOnly">
      <summary>
            Gets/sets the PivotTable report state whether the target sheet is read only. 
            Default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTable.RowFields">
      <summary>
            Represents the fields that are currently showing as row fields in report.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTable.ColumnFields">
      <summary>
            Represents the fields that are currently showing as column fields in report.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTable.DataFields">
      <summary>
            Represents the fields that are currently showing as data fields in report.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTable.PivotCache">
      <summary>
            Gets PivotCache object that the report used.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTable.Parent">
      <summary>
            Gets the parent object for the specified object. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTable.Name">
      <summary>
            Gets name
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Data.PivotTables">
      <summary>
             Represents a collection of all the <see cref="T:Aspose.Cells.GridWeb.Data.PivotTable" /> objects
             </summary>
      <example>
        <code>
             
             [C#]
             
             //On the assumption that worksheet "Sheet1" has datas, then creates a PivotTable report base on it.
             WebWorksheet sourceSheet = GridWeb1.WebWorksheets["Sheet1"];
             Aspose.Cells.GridWeb.Data.WebCellArea sourceRange = new WebCellArea();
             sourceRange.StartRow = 0;
             sourceRange.StartColumn = 0;
             sourceRange.EndRow = 10;
             sourceRange.EndColumn = 5;
            
             PivotCache cache = GridWeb1.WebWorksheets.PivotCaches.Add(sourceSheet, sourceRange);
            
             PivotTable table = cache.CreatePivotTable();
            
             table.PivotFields[0].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[1].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[2].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[3].Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField;
             table.PivotFields[4].Orientation = PivotFieldOrientation.ColumnField;
             table.PivotFields[5].Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField;
                
             table.PivotFields[3].Function = PivotFieldFunction.Count;
             table.PivotFields[5].Function = PivotFieldFunction.Sum;
             
             table.DataBind();
             
             //Creates a PivotTable report from DataView or DataTable.
             DataView dataView;//Or  DataTable dataTable;
                 .
                 .
                 .
             Sets dataView(dataTable) Value
                 .
                 .
                 .     
            
             PivotCache cache = GridWeb1.WebWorksheets.PivotCaches.Add(dataView);
             //Or PivotCache cache = GridWeb1.WebWorksheets.PivotCaches.Add(dataTable);
             PivotTable table = cache.CreatePivotTable();
             table = GridWeb1.WebWorksheets.PivotTables["PivotTable1"];
             table.PivotFields[0].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[1].Orientation = PivotFieldOrientation.RowField;
             table.PivotFields[2].Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField;
             table.DataBind();
             
             
             [VB]
             
             
             'On the assumption that worksheet "Sheet1" has datas, then creates a PivotTable report base on it.
             Dim sourceSheet As WebWorksheet =  GridWeb1.WebWorksheets("Sheet1")
             Dim sourceRange As Aspose.Cells.GridWeb.Data.WebCellArea =  New WebCellArea()/
             sourceRange.StartRow = 0
             sourceRange.StartColumn = 0
             sourceRange.EndRow = 10
             sourceRange.EndColumn = 5
            
             Dim cache As PivotCache =  GridWeb1.WebWorksheets.PivotCaches.Add(sourceSheet,sourceRange)
            
             Dim table As PivotTable =  cache.CreatePivotTable()
            
             table.PivotFields(0).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(1).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(2).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(3).Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField
             table.PivotFields(4).Orientation = PivotFieldOrientation.ColumnField
             table.PivotFields(5).Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField
            
             table.PivotFields(3).Function = PivotFieldFunction.Count
             table.PivotFields(5).Function = PivotFieldFunction.Sum
            
             table.DataBind()
            
             'Creates a PivotTable report from DataView or DataTable.  
            
             Dim dataView As DataView ' Or Dim dataTable As DataTable
                 . 
                 .
             Sets dataView(dataTable) Value
                 . 
                 .
                 .
             
             Dim cache As PivotCache =  GridWeb1.WebWorksheets.PivotCaches.Add(dataView)
             'Or Dim cache As PivotCache =  GridWeb1.WebWorksheets.PivotCaches.Add(dataTable)
             Dim table As PivotTable =  cache.CreatePivotTable()
             table = GridWeb1.WebWorksheets.PivotTables("PivotTable1")
             table.PivotFields(0).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(1).Orientation = PivotFieldOrientation.RowField
             table.PivotFields(2).Orientation = PivotFieldOrientation.ColumnField | PivotFieldOrientation.DataField
             table.DataBind()
             
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTables.Add(Aspose.Cells.GridWeb.Data.PivotCache)">
      <summary>
            Adds a PivotTable object from the specified PivotCache to a new worksheet
            </summary>
      <param name="pivotCache">The source data</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTables.Add(Aspose.Cells.GridWeb.Data.PivotCache,System.String)">
      <summary>
            Adds a PivotTable object from the specified PivotCache to a new worksheet
            </summary>
      <param name="pivotCache">The source data</param>
      <param name="tableName">PivotTable name</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTables.Add(Aspose.Cells.GridWeb.Data.PivotCache,Aspose.Cells.GridWeb.Data.WebWorksheet,Aspose.Cells.GridWeb.Data.WebCell)">
      <summary>
            Adds a PivotTable object from the specified PivotCache to the specified worksheet 
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTables.Add(Aspose.Cells.GridWeb.Data.PivotCache,Aspose.Cells.GridWeb.Data.WebWorksheet,Aspose.Cells.GridWeb.Data.WebCell,System.String)">
      <summary>
            Adds a PivotTable object from the specified PivotCache to the specified worksheet 
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTables.Clear">
      <summary>
            Removes all PivotTable objects and all PivotCache objects in the control.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTables.Remove(Aspose.Cells.GridWeb.Data.PivotTable)">
      <summary>
            Removes the specified PivotTable object from the PivotTables
            and the related PivotCache if it is not used by other PivotTable
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTables.RemoveAt(System.Int32)">
      <summary>
            Removes the specified PivotTable object from the PivotTables
            and the related PivotCache if it is not used by other PivotTable
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTables.Refresh(Aspose.Cells.GridWeb.Data.PivotTable)">
      <summary>
            ReDataBinds data source to the PivotTable report.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTables.RefreshAll">
      <summary>
            ReDataBinds data source to all PivotTable report.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTables.Contains(System.String)">
      <summary>
            Returns true if exists pivottable name tableName.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTables.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the entire PivotTable to a compatible one-dimensional Array, starting at the specified index of the target array
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Data.PivotTables.GetEnumerator">
      <summary>
            Returns an IEnumerator for the PivotTables.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTables.Item(System.Int32)">
      <summary>
            Gets a PivotTable object by index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTables.Item(System.String)">
      <summary>
            Gets a PivotTable object by name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTables.Parent">
      <summary>
            Gets the parent object for the specified object. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTables.Count">
      <summary>
            Gets the number of elements contained in the PivotTables instance
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTables.IsSynchronized">
      <summary>
            Gets a value indicating whether access to the PivotTables is synchronized (thread-safe).
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Data.PivotTables.SyncRoot">
      <summary>
            Gets an object that can be used to synchronize access to the PivotTables.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.RowColumnType">
      <summary>
            Represents the row/column type of the row/column events.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.RowColumnType.Row">
      <summary>
            Row type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.RowColumnType.Column">
      <summary>
            Column type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.RejectDeleteException">
      <summary>
            This exception class is thrown in the RowColumnEventArgs.RejectDelete method.
            This exception can cancel a deleting operation in a RowDeleting or ColumnDeleting event handler.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.RowColumnEventArgs">
      <summary>
            Provides data for row/column events.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.RowColumnEventArgs.RejectDelete">
      <summary>
            This method throws a RejectDeleteException. Call this method in RowDeleting/ColumnDeleting event handlers to cancel the deleting operations.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.RowColumnEventArgs.Type">
      <summary>
            The row or column type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.RowColumnEventArgs.Num">
      <summary>
            The row or column number, starts from zero.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.RowColumnEventArgs.Argument">
      <summary>
            The argument of the event.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.TableItemStyle">
      <summary>
             Inherited from System.Web.UI.WebControls.TableItemStyle.
             Encapsulates the styles of a WebCell.
             </summary>
      <example>
        <code>
             [C#]
             ...
             using System.Web.UI.WebControls;
             ...
             ...
             WebWorksheets sheets = GridWeb1.WebWorksheets;
            	sheets.Clear();
            	WebWorksheet sheet = sheets[sheets.Add("demo1")];
            
            	WebCell cell = sheet.Cells[0,0];
            	cell.StringValue = "Demo Text";
            
             Aspose.Cells.GridWeb.TableItemStyle style = cell.GetStyle();
            	style.Font.Size = new FontUnit("72pt");
            	style.Wrap = false;
            		
            	style.BackColor = Color.Gray;
            	style.BorderStyle = BorderStyle.Solid;
            	style.BorderWidth = new Unit(1, UnitType.Pixel);
            	style.BorderColor = Color.Silver;
            
            	style.RightBorderStyle.BorderColor = Color.Black;
            	style.RightBorderStyle.BorderStyle = BorderStyle.Solid;
            	style.RightBorderStyle.BorderWidth = new Unit(1, UnitType.Pixel);
            	style.BottomBorderStyle.BorderColor = Color.Black;
            	style.BottomBorderStyle.BorderStyle = BorderStyle.Solid;
            	style.BottomBorderStyle.BorderWidth = new Unit(1, UnitType.Pixel);
             cell.SetStyle(style);
            	
            	[Visual Basic]
            	...
            	Imports System.Web.UI.WebControls
            	...
            	...
            	Dim sheets As WebWorksheets =  GridWeb1.WebWorksheets 
            	sheets.Clear()
            	Dim sheet As WebWorksheet =  sheets(sheets.Add(__0__)) 
            	 
            	Dim cell As WebCell =  sheet.Cells(0,0) 
            	cell.StringValue = "Demo Text"
            	
             Dim style As Aspose.Cells.GridWeb.TableItemStyle = cell.GetStyle()
            	style.Font.Size = New FontUnit("72pt")
            	style.Wrap = False
            	 
            	style.BackColor = Color.Gray
            	style.BorderStyle = BorderStyle.Solid
            	style.BorderWidth = New Unit(1, UnitType.Pixel)
            	style.BorderColor = Color.Silver
            	 
            	style.RightBorderStyle.BorderColor = Color.Black
            	style.RightBorderStyle.BorderStyle = BorderStyle.Solid
            	style.RightBorderStyle.BorderWidth = New Unit(1, UnitType.Pixel)
            	style.BottomBorderStyle.BorderColor = Color.Black
            	style.BottomBorderStyle.BorderStyle = BorderStyle.Solid
            	style.BottomBorderStyle.BorderWidth = New Unit(1, UnitType.Pixel)
             cell.SetStyle(style)
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridWeb.TableItemStyle.CopyFrom(System.Web.UI.WebControls.Style)">
      <summary>
            Copies from another style object.
            </summary>
      <param name="s">another style object</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.TableItemStyle.MergeWith(System.Web.UI.WebControls.Style)">
      <summary>
            Merges with another style object.
            </summary>
      <param name="s">another style object</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.TableItemStyle.AddAttributesToRender(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebControl)">
      <summary>
            Internal use only.
            Implementation method Do not call this method directly.
            </summary>
      <param name="writer">
      </param>
      <param name="owner">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.TableItemStyle.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.TableItemStyle.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Internal used only.
            </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.TableItemStyle.GetHashCode">
      <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
      <returns>A hash code for the current Style.</returns>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableItemStyle.BackImageUrl">
      <summary>
            Background image url.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableItemStyle.BackImageAttributes">
      <summary>
            Background image attributes.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableItemStyle.Filter">
      <summary>
            Visual filters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableItemStyle.Rotation">
      <summary>
            Gets or sets Rotation attribute.
            </summary>
      <remarks>
            NOTE: The rotation attribute only supports 90 and -90 degrees.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableItemStyle.IndentLevel">
      <summary>
            Gets or sets indent level.
            </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableItemStyle.LeftBorderStyle">
      <summary>
            Specifies the style of the cell's left border.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableItemStyle.RightBorderStyle">
      <summary>
            Specifies the style of the cell's right border.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableItemStyle.TopBorderStyle">
      <summary>
            Specifies the style of the cell's top border.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableItemStyle.BottomBorderStyle">
      <summary>
            Specifies the style of the cell's bottom border.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableItemStyle.NumberType">
      <summary>
            Gets or sets the number format type. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableItemStyle.Custom">
      <summary>
            Gets or sets the custom format, null or empty string means no custom format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableItemStyle.IsLocked">
      <summary>
            Gets or sets a value indicating whether a cell can be modified or not when its worksheet is protected.
            When its worksheet is protected and IsLocked is true, the cell can not be edit. When its worksheet is
            protected and IsLocked is false, the cell can be edit.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.LayoutFixedType">
      <summary>
            Layout fixed type of a table object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.LayoutFixedType.NotSet">
      <summary>
            Not set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.LayoutFixedType.Fixed">
      <summary>
            Fixed.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.LayoutFixedType.Auto">
      <summary>
            Auto.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.BorderCollapseType">
      <summary>
            Collapse type of a table's border object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.BorderCollapseType.NotSet">
      <summary>
            Not set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.BorderCollapseType.Collapse">
      <summary>
            Collapsed.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.BorderCollapseType.Separate">
      <summary>
            Separated.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.TableStyle">
      <summary>
            Inherited from System.Web.UI.WebControls.TableStyle.
            Represents the style of a web table.
            Please refer to .NET SDK document about System.Web.UI.WebControls.TableStyle for further information.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.TableStyle.CopyFrom(System.Web.UI.WebControls.Style)">
      <summary>
            Copies from another style object.
            </summary>
      <param name="s">another style object.</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.TableStyle.MergeWith(System.Web.UI.WebControls.Style)">
      <summary>
            Merges with another style object.
            </summary>
      <param name="s">another style object</param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.TableStyle.AddAttributesToRender(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebControl)">
      <summary>
            Internal use only.
            Do not call this method directly.
            </summary>
      <param name="writer">
      </param>
      <param name="owner">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.TableStyle.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableStyle.LeftBorderStyle">
      <summary>
            Specifies the style of left border of the table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableStyle.RightBorderStyle">
      <summary>
            Specifies the style of right border of the table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableStyle.TopBorderStyle">
      <summary>
            Specifies the style of top border of the table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableStyle.BottomBorderStyle">
      <summary>
            Specifies the style of bottom border of the table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableStyle.LayoutFixed">
      <summary>
            Specifies whether the layout of the table is fixed(not extended automatically when it contain large objects).
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableStyle.BorderCollapse">
      <summary>
            Specifies the border collapse feature.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableStyle.CellSpacing">
      <summary>
            Always returns -1.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableStyle.CellPadding">
      <summary>
            Always returns -1.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableStyle.BackImageUrl">
      <summary>
            Background image url.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableStyle.GridLines">
      <summary>
            Grid lines.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.TableStyle.HorizontalAlign">
      <summary>
            Horizontal align.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.ValidationType">
      <summary>
            Represents customer side validation type. AnyValue represents no validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.AnyValue">
      <summary>
            Any value validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.DropDownList">
      <summary>
            Show dropdown list.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.List">
      <summary>
            List validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.FreeList">
      <summary>
            Free List validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.CustomExpression">
      <summary>
            Custom validation type, using regular expression.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.Boolean">
      <summary>
            TRUE or FALSE
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.Number">
      <summary>
            Number ( Integer or Double ).
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.Integer">
      <summary>
            Integer
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.Date">
      <summary>
            Date yyyy-MM-dd
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.DateTime">
      <summary>
            DateTime (yyyy-MM-dd or yyyy-MM-dd hh:mm:ss).
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.Time">
      <summary>
            Time (hh:mm:ss).
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.TextLength">
      <summary>
            textlength
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.CustomString">
      <summary>
            customstr
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.CustomFunction">
      <summary>
            Custom javascript function validation.
            </summary>
      <remarks>
            Use the ClientValidationFunction property to specify the client validation function's name.
            The function should be declared as this formation:<br />
            function customValicationFunction(source, value)<br />
            The parameter "source" is the cell object.
            The parameter "value" is the string value of a cell to be checked.
            The function should returns true if the value is valid.
            </remarks>
    </member>
    <member name="F:Aspose.Cells.GridWeb.ValidationType.CheckBox">
      <summary>
            Display the cell as a checkbox. And the value of the cell is True of False.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Validation">
      <summary>
            Represents a cell's validation operation.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Validation.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Validation.#ctor(Aspose.Cells.GridWeb.ValidationType,System.Boolean)">
      <summary>
            Internal use.
            </summary>
      <param name="validationType">
      </param>
      <param name="isRequired">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Validation.ToString">
      <summary>
            Inherited from object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Validation.LoadValueList(System.Data.DataView,System.String,System.String,System.Boolean)">
      <summary>
            Loads value list from a DataView object. You can specify the value field and text field of the DataView.
            Each value and text pair will be combined to one string, with a comma between them.
            </summary>
      <param name="view">The DataView object.</param>
      <param name="valueField">The value field name.</param>
      <param name="textField">The text field name.</param>
      <param name="valuePrefixText">Indicates whether to add a value prefix to each displayed text.</param>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Validation.RegEx">
      <summary>
            Gets or sets the regular expression string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Validation.ClientValidationFunction">
      <summary>
            Gets or sets the client validation javascript function name.
            </summary>
      <remarks>
            Use the ClientValidationFunction property to specify the client validation function's name.
            The function should be declared as this formation:<br />
            function customValicationFunction(source, value)<br />
            The parameter "source" is the cell object.
            The parameter "value" is the string value of a cell to be checked.
            The function should returns true if the value is valid.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Validation.ClientValidationOpType">
      <summary>
            Gets or sets the   validation op type ,Between/NotBetween/Equal/NotEqual/Greater/GreaterOrEqual/Less/LessOrEqual.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Validation.ClientValidationValue1">
      <summary>
            Gets or sets the  operator target value 1
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Validation.ClientValidationValue2">
      <summary>
            Gets or sets the  operator target value 2
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Validation.ValueList">
      <summary>
            Gets the value list object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Validation.ValueArray">
      <summary>
            Design time used only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Validation.ValueText">
      <summary>
            Design time used only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Validation.ValidationType">
      <summary>
            Gets or sets the validation type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.Validation.IsRequired">
      <summary>
            Gets or sets whether the cell value is required.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.ViewerStyleTemplate">
      <summary>
            ViewerStyleTemplate.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.ViewerStyleTemplate.getStylesFromControl(Aspose.Cells.GridWeb.GridWeb)">
      <summary>
      </summary>
      <param name="control">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.ViewerStyleTemplate.setStylesForControl(Aspose.Cells.GridWeb.GridWeb)">
      <summary>
      </summary>
      <param name="control">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.ViewerStyleTemplate.persistToFile(System.String)">
      <summary>
      </summary>
      <param name="fileName">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.ViewerStyleTemplate.persistToString">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridWeb.ViewerStyleTemplate.parseFromFile(System.String)">
      <summary>
      </summary>
      <param name="fileName">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.ViewerStyleTemplate.parseFromString(System.String)">
      <summary>
      </summary>
      <param name="xmlStr">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.ViewerStyleTemplate.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.ViewerStyleTemplate.LoadPresetStyle(Aspose.Cells.GridWeb.PresetStyle)">
      <summary>
            Load a preset style.
            </summary>
      <param name="presetStyle">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridWeb.ViewerStyleTemplate.Tridione">
      <summary>
            Internal used only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.ActiveCellBgColor">
      <summary>
            Specifies the background color of the active cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.SelectCellBgColor">
      <summary>
            Specifies the background color of the selected cells in multi-select range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.ActiveHeaderBgColor">
      <summary>
            Specifies the background color of the active row/column header.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.ActiveCellColor">
      <summary>
            Specifies the color of the active cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.SelectCellColor">
      <summary>
            Specifies the color of the selected cells in multi-select range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.ActiveHeaderColor">
      <summary>
            Specifies the color of the active row/column header.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.HeaderBarStyle">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.HeaderBarWidth">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.HeaderBarHeight">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.FrameTableStyle">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.HeaderBarTableStyle">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.ViewTableStyle">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.BottomTableStyle">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.TabStyle">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.ActiveTabStyle">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.ScrollBarBaseColor">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.ScrollBarArrowColor">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.GridWeb.ViewerStyleTemplate.DefaultGridLineColor">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.GridWeb.Worksheet">
      <summary>
            Inherited from WebWorksheet. Used in design-time only.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Worksheet.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridWeb.Worksheet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Internal used only.
            </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
  </members>
</doc>